{"version":3,"sources":["webpack:///webpack/bootstrap 84334d3d4e838a12e9da","webpack:///./JavaScripts/main.js","webpack:///./~/irlib/dist/irlib.js","webpack:///./JavaScripts/App.js","webpack:///./JavaScripts/Controller.js","webpack:///./~/underscore/underscore.js","webpack:///./JavaScripts/RemoteService.js","webpack:///./JavaScripts/ServiceScanner.js"],"names":["sl","ServiceLocator","register","app","get","run","App","controller","addEventListeners","serviceScanner","findServices","serviceUrl","console","log","Controller","controls","map","document","querySelectorAll","keyMap","_click","click","bind","forEach","control","addEventListener","event","element","action","dataset","send","request","messageOutlet","querySelector","innerText","statusText","RemoteService","key","onSuccess","onError","_request","data","url","method","success","error","XMLHttpRequest","open","setRequestHeader","onload","status","JSON","parse","responseText","exception","onerror","arguments","EF","ServiceScanner","serviceAvailable","location","window","hostname","test","ipParts","split","lastIpPart","pop","_testIps","port","protocol","range","scheme","ip","ipElements","slice","push","_testIp","join","_ajax","setTimeout","abort","start","stop","step","result","i"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;AClCA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAPA;;;;AASA,KAAMA,KAAK,IAAI,gBAAMC,cAAV,EAAX;AACAD,IAAGE,QAAH,CAAY,KAAZ;AACAF,IAAGE,QAAH,CAAY,YAAZ;AACAF,IAAGE,QAAH,CAAY,gBAAZ;;AAEA,KAAMC,MAAMH,GAAGI,GAAH,CAAO,KAAP,CAAZ;AACAD,KAAIE,GAAJ,G;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAa,wBAAwB;;AAErC;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,cAAa,6BAA6B;;AAE1C;AACA;AACA;AACA,cAAa,mBAAmB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC;;AAED,EAAC;;;;AAID;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,cAAa,0BAA0B;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,cAAa,4BAA4B;;AAEzC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,wEAAuE;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,cAAa,+BAA+B;;AAE5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA,oCAAmC;AACnC;AACA,UAAS,sBAAsB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,4DAA4D;AAC3E;AACA;AACA;AACA,wCAAuC;AACvC;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,6BAA6B;AACpD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,2DAA0D,iBAAiB;AAC3E;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2GAA0G;AAC1G,mDAAkD;AAClD,+DAA8D;AAC9D,uGAAsG;AACtG,gEAA+D;AAC/D,mCAAkC;AAClC,uCAAsC;AACtC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,cAAa,iCAAiC;;AAE9C,EAAC;;;AAGD,cAAa,yBAAyB;;AAEtC;AACA;AACA;AACA,cAAa,6BAA6B;;AAE1C,EAAC;;;AAGD,cAAa,0CAA0C;;AAEvD;AACA;AACA;AACA,cAAa,6BAA6B;;AAE1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,wBAAwB;AACvC,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT,iCAAgC;AAChC;;AAEA,iDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,wBAAwB;AACvC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,wBAAwB;AACvC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,EAAC;;;AAGD,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;;AAEA,mDAAkD;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA,cAAa,6BAA6B;;AAE1C,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,uDAAsD;AACtD;AACA;AACA,cAAa;AACb,UAAS,4CAA4C;AACrD;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAa,4BAA4B;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;;AAEA,oCAAmC;AACnC;AACA;AACA;AACA;AACA,UAAS,8CAA8C;AACvD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,8BAA8B;AACrD,uBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,wBAAwB;AACvC,gBAAe,iBAAiB;AAChC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,wBAAwB;AACnD;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,wCAAwC;AACvD,gBAAe,wCAAwC;AACvD,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,uBAAuB;AACrC,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA,0DAAyD;AACzD;AACA,kBAAiB,6CAA6C;AAC9D;AACA;AACA;AACA;AACA;AACA,kBAAiB,0EAA0E;AAC3F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,sDAAqD;AACrD;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA,wBAAuB;AACvB,uBAAsB;AACtB,uBAAsB;AACtB,yBAAwB;AACxB,wBAAuB;AACvB,yBAAwB;AACxB;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,oBAAmB;AACnB;AACA;AACA,8CAA6C,EAAE,kBAAkB;AACjE;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;AACA,UAAS,8CAA8C;AACvD;AACA;;AAEA,uBAAsB;AACtB;AACA,UAAS,yBAAyB;AAClC;AACA;;AAEA,qBAAoB;AACpB;AACA,UAAS,2CAA2C;AACpD;AACA;;AAEA,mDAAkD;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,wBAAwB;AACvC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,wBAAwB;AACnC,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,EAAE;AACb,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,cAAa,iCAAiC;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA,cAAa,qCAAqC;;AAElD,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;;AAExB;AACA;AACA;AACA,wBAAuB;;AAEvB;AACA;AACA;AACA,yBAAwB;;AAExB;AACA;AACA;AACA,uBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,IAAI,yBAAyB,IAAI;;AAE5D;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB,8CAA8C,wBAAwB;AACvF;AACA,kBAAiB,OAAO,yBAAyB;AACjD;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;;;AAGjB;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;;;AAGD,EAAC;;;;AAID,EAAC,yBAAiD;;AAElD;;;;;;;;;;;;;;;;;;;;;ACr3GA;;;KAGqBC,G;AACjB,oBAAc;AAAA;;AACV;AACA,cAAKC,UAAL,GAAkB,EAAlB;AACH;;;;+BAMK;AACF,kBAAKA,UAAL,CAAgBC,iBAAhB;AACA,kBAAKC,cAAL,CAAoBC,YAApB,CAAiC,UAACC,UAAD,EAAgB;AAC7CC,yBAAQC,GAAR,CAAYF,UAAZ;AACH,cAFD;AAGH;;;iCATc;AACX,oBAAO,CAAC,YAAD,EAAe,gBAAf,CAAP;AACH;;;;;;mBARgBL,G;;;;;;;;;;;;;;;sjBCHrB;;;;;AAGA;;;;AACA;;;;;;;;KAEqBQ,U;AACjB,2BAAc;AAAA;;AACV,cAAKC,QAAL,GAAgB,qBAAEC,GAAF,CAAMC,SAASC,gBAAT,CAA0B,eAA1B,CAAN,CAAhB;;AAEA,cAAKC,MAAL,GAAc;AACV,2BAAc,OADJ;AAEV,wBAAW,OAFD;AAGV,qBAAQ;AAHE,UAAd;AAKH;;;;6CAEmB;AAChB,iBAAIC,SAAS,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;;AAEA,kBAAKP,QAAL,CAAcQ,OAAd,CAAsB,UAAUC,OAAV,EAAmB;AACrCA,yBAAQC,gBAAR,CAAyB,OAAzB,EAAkC,UAAUC,KAAV,EAAiB;AAC/CN,4BAAOM,KAAP,EAAc,IAAd;AACH,kBAFD;AAGH,cAJD;AAKH;;;+BAEKA,K,EAAOC,O,EAAS;AAAA;;AAClB,iBAAMC,SAASD,QAAQE,OAAR,CAAgBD,MAA/B;AACA,qCAAcE,IAAd,CAAmB,KAAKX,MAAL,CAAYS,MAAZ,CAAnB,EAAwC;AAAA,wBAAMhB,QAAQC,GAAR,YAAN;AAAA,cAAxC,EAAsE,UAAUkB,OAAV,EAAmB;AACrF,qBAAMC,gBAAgBf,SAASgB,aAAT,CAAuB,yBAAvB,CAAtB;AACA,qBAAID,aAAJ,EAAmB;AACfA,mCAAcE,SAAd,GAA0B,YAAYH,QAAQI,UAA9C;AACH;AACJ,cALD;AAMH;;;;;;mBA7BgBrB,U;;;;;;;;;ACNrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,YAAY;AAClD;AACA;AACA,MAAK;AACL;AACA,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAoD;AACpD,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,YAAY;AACzD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,6CAA4C,mBAAmB;AAC/D;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP,sBAAqB;AACrB;;AAEA;AACA;AACA,MAAK;AACL,kBAAiB;;AAEjB;AACA,mDAAkD,EAAE,iBAAiB;;AAErE;AACA,yBAAwB,8BAA8B;AACtD,4BAA2B;;AAE3B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;;;;;;;;;;;;;;;;;;;AC3gDD;;;;KAIqBsB,a;;;;;;;;AACjB;;;;;;8BAMYC,G,EAAKC,S,EAAWC,O,EAAS;AACjCH,2BAAcI,QAAd,CACI,UAAUH,GAAV,GAAgB,EADpB,EAEI,KAFJ,EAGI,UAACI,IAAD,EAAU;AACN7B,yBAAQC,GAAR,CAAY4B,IAAZ;AACA,qBAAIH,SAAJ,EAAe;AACXA,+BAAUG,IAAV,EAAgBV,OAAhB;AACH;AACJ,cARL,EASI,UAACA,OAAD,EAAa;AACTnB,yBAAQC,GAAR,CAAYkB,OAAZ;AACA,qBAAIO,SAAJ,EAAe;AACXC,6BAAQR,OAAR;AACH;AACJ,cAdL;AAgBH;;AAED;;;;;;;;;;;kCAQgBW,G,EAAKC,M,EAAQC,O,EAASC,K,EAAO;AACzC,iBAAMd,UAAU,IAAIe,cAAJ,EAAhB;AACAf,qBAAQgB,IAAR,CAAaJ,MAAb,EAAqBD,GAArB,EAA0B,IAA1B;AACAX,qBAAQiB,gBAAR,CAAyB,cAAzB,EAAyC,wBAAzC;;AAEAjB,qBAAQkB,MAAR,GAAiB,YAAY;AACzB,qBAAIlB,QAAQmB,MAAR,IAAkB,GAAlB,IAAyBnB,QAAQmB,MAAR,GAAiB,GAA9C,EAAmD;AAC/C,yBAAI;AACA,6BAAIT,OAAOU,KAAKC,KAAL,CAAWrB,QAAQsB,YAAnB,CAAX;AACAT,iCAAQH,IAAR,EAAcV,OAAd;AACH,sBAHD,CAGE,OAAOuB,SAAP,EAAkB;AAChBT,+BAAMd,OAAN,EAAe;AACX,0CAAauB;AADF,0BAAf;AAGH;AACJ,kBATD,MASO;AACHT,2BAAMd,OAAN;AACH;AACJ,cAbD;;AAeAA,qBAAQwB,OAAR,GAAkB,YAAY;AAC1B3C,yBAAQC,GAAR,CAAY,SAAZ,EAAuB2C,SAAvB;;AAEAX,uBAAMd,OAAN;AACH,cAJD;;AAMAA,qBAAQD,IAAR;AACH;;;;;;mBA7DgBM,a;;;;;;;;;;;;;;;;;;;ACJrB;;;;AAIA,KAAMqB,KAAK,SAALA,EAAK,GAAM,CAChB,CADD;;KAGqBC,c;;;;;;;sCACJC,gB,EAAkB;AAC3B,iBAAMC,WAAWC,UAAUA,OAAOD,QAAlC;AACA,iBAAME,WAAWF,SAASE,QAA1B;;AAEA,iBAAI,mDAAmDC,IAAnD,CAAwDD,QAAxD,CAAJ,EAAuE;AACnE,qBAAIE,UAAUF,SAASG,KAAT,CAAe,GAAf,CAAd;;AAEA,qBAAMC,aAAaF,QAAQG,GAAR,EAAnB;;AAEA;AACA,sBAAKC,QAAL,CAAcT,gBAAd,EAAgCK,OAAhC,EAAyC,CAACE,UAAD,CAAzC,EAAuDN,SAASS,IAAhE,EAAsET,SAASU,QAA/E;AACA;AACH;AACJ;;;kCAEQX,gB,EAAkBK,O,EAASO,K,EAAOF,I,EAAMG,M,EAAQ;AACrDD,mBAAMhD,OAAN,CAAc,UAAUkD,EAAV,EAAc;AACxB,qBAAMC,aAAaV,QAAQW,KAAR,EAAnB;AACAD,4BAAWE,IAAX,CAAgBH,EAAhB;;AAEA,sBAAKI,OAAL,CAAalB,gBAAb,EAA+Be,UAA/B,EAA2CL,IAA3C,EAAiDG,MAAjD;AACA,sBAAKK,OAAL,CAAalB,gBAAb,EAA+Be,UAA/B,EAA2C,MAA3C,EAAmDF,MAAnD;AACH,cANa,CAMZlD,IANY,CAMP,IANO,CAAd;AAOH;;;iCAEOqC,gB,EAAkBK,O,EAASK,I,EAAMG,M,EAAQ;AAC7C,iBAAM9B,MAAM8B,SAAS,IAAT,GAAgBR,QAAQc,IAAR,CAAa,GAAb,CAAhB,GAAoC,GAApC,GAA0CT,IAA1C,GAAiD,OAA7D;;AAEA,kBAAKU,KAAL,CAAW,KAAX,EAAkBrC,GAAlB,EAAuBiB,gBAAvB;AACH;;;+BAEKhB,M,EAAQD,G,EAA+B;AAAA,iBAA1BE,OAA0B,uEAAhBa,EAAgB;AAAA,iBAAZZ,KAAY,uEAAJY,EAAI;;AACzC,iBAAM1B,UAAU,IAAIe,cAAJ,EAAhB;AACAf,qBAAQgB,IAAR,CAAaJ,MAAb,EAAqBD,GAArB,EAA0B,IAA1B;AACAX,qBAAQiB,gBAAR,CAAyB,cAAzB,EAAyC,wBAAzC;;AAEAjB,qBAAQkB,MAAR,GAAiB,YAAY;AACzB,qBAAIlB,QAAQmB,MAAR,IAAkB,GAAlB,IAAyBnB,QAAQmB,MAAR,GAAiB,GAA9C,EAAmD;AAC/C,yBAAI;AACA,6BAAIT,OAAOU,KAAKC,KAAL,CAAWrB,QAAQsB,YAAnB,CAAX;AACAT,iCAAQF,GAAR,EAAaD,IAAb,EAAmBV,OAAnB;AACH,sBAHD,CAGE,OAAOuB,SAAP,EAAkB;AAChBT,+BAAMd,OAAN,EAAe;AACX,0CAAauB;AADF,0BAAf;AAGH;AACJ,kBATD,MASO;AACHT,2BAAMd,OAAN;AACH;AACJ,cAbD;;AAeAA,qBAAQwB,OAAR,GAAkB,YAAY;AAC1BV,uBAAMd,OAAN;AACH,cAFD;;AAIAA,qBAAQD,IAAR;;AAEAkD,wBAAW,YAAY;AACnBjD,yBAAQkD,KAAR;AACApC,uBAAMd,OAAN;AACH,cAHD,EAGG,IAHH;AAIH;;;gCAGamD,K,EAAOC,I,EAAMC,I,EAAM;AAC7B,iBAAI,OAAOD,IAAP,IAAe,WAAnB,EAAgC;AAC5B;AACAA,wBAAOD,KAAP;AACAA,yBAAQ,CAAR;AACH;;AAED,iBAAI,OAAOE,IAAP,IAAe,WAAnB,EAAgC;AAC5BA,wBAAO,CAAP;AACH;;AAED,iBAAKA,OAAO,CAAP,IAAYF,SAASC,IAAtB,IAAgCC,OAAO,CAAP,IAAYF,SAASC,IAAzD,EAAgE;AAC5D,wBAAO,EAAP;AACH;;AAED,iBAAIE,SAAS,EAAb;AACA,kBAAK,IAAIC,IAAIJ,KAAb,EAAoBE,OAAO,CAAP,GAAWE,IAAIH,IAAf,GAAsBG,IAAIH,IAA9C,EAAoDG,KAAKF,IAAzD,EAA+D;AAC3DC,wBAAOT,IAAP,CAAYU,CAAZ;AACH;;AAED,oBAAOD,MAAP;AACH;;;;;;mBAtFgB3B,c","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 84334d3d4e838a12e9da\n **/","/**\n * Created by daniel on 22.10.16.\n */\n\nimport IrLib from './../node_modules/irlib/dist/irlib';\nimport App from './App.js';\nimport Controller from './Controller.js';\nimport ServiceScanner from './ServiceScanner.js';\n\nconst sl = new IrLib.ServiceLocator();\nsl.register('app', App);\nsl.register('controller', Controller);\nsl.register('serviceScanner', ServiceScanner);\n\nconst app = sl.get('app');\napp.run();\n\n\n/** WEBPACK FOOTER **\n ** ./JavaScripts/main.js\n **/","/**\n * Created by COD on 03.06.15.\n */\n/*jslint unparam: true */\n/*global window, require, exports */\n\n(function(exports){\n    var IrLib = exports;\n\n(function() {/*    require('config');// */\n\n/**\n * Created by COD on 03.06.15.\n */\nIrLib.Config = {};\n\n\n}());\n\n\n(function() {/*    require('core-object');// */\n\n/**\n * Created by COD on 03.06.15.\n */\n(function() {/*require('class');// */\n\n/* Simple JavaScript Inheritance\n * By John Resig http://ejohn.org/\n * MIT Licensed.\n *\n * Edited by Daniel Corn\n */\n// jshint ignore: start\n// Inspired by base2 and Prototype\n(function(root){\n    var initializing = false, fnTest = /xyz/.test(function(){xyz;}) ? /\\b_super\\b/ : /.*/;\n    //var hasUnderscoreJs = root['_'] && root._['clone'];\n    //var hasJQuery = root['jQuery'] && root.jQuery().jquery;\n    //\n    //var simpleClone = function(source, isDeep) {\n    //    var target = {};\n    //    for (var prop in source) {\n    //        if (!source.hasOwnProperty(prop)) {\n    //            console.log('skip: ' + prop)\n    //            continue;\n    //        }\n    //        if (source[prop] instanceof Date) {\n    //            console.log('copy: Date ' + prop);\n    //            target[prop] = source[prop];\n    //\n    //            continue;\n    //\n    //        }\n    //        if (isDeep && typeof source[prop] === 'object') {\n    //            target[prop] = simpleClone(target[prop], source[prop]);\n    //        } else {\n    //            target[prop] = source[prop];\n    //        }\n    //    }\n    //    return target;\n    //};\n    //var createLocalProperty = function(source) {\n    //    if (!source) {\n    //        return source;\n    //    }\n    //    if (typeof source === 'object') {\n    //        console.log('is object');\n    //        if (hasJQuery) {\n    //            return jQuery.extend({}, source);\n    //        }\n    //        if (hasUnderscoreJs) {\n    //            return _.clone(source)\n    //        }\n    //        return simpleClone(source, false);\n    //    }\n    //    return source;\n    //};\n\n    // The base Class implementation (does nothing)\n    this.Class = function(){};\n\n    // Create a new Class that inherits from this class\n    Class.extend = function(prop) {\n        var _super = this.prototype;\n\n        // Instantiate a base class (but only create the instance,\n        // don't run the init constructor)\n        initializing = true;\n        var prototype = new this();\n        initializing = false;\n\n        // Copy the properties over onto the new prototype\n        for (var name in prop) {\n            //if (typeof prop[name] === 'object') {\n            //    IrLib.Logger.warn(\n            //        'Detected object type prototype member \"' + name + '\". ' +\n            //        'You should initialize member objects inside init()'\n            //    );\n            //}\n            // Check if we're overwriting an existing function\n            prototype[name] = typeof prop[name] == \"function\" &&\n            typeof _super[name] == \"function\" && fnTest.test(prop[name]) ?\n                (function(name, fn){\n                    return function() {\n                        var tmp = this._super;\n\n                        // Add a new ._super() method that is the same method\n                        // but on the super-class\n                        this._super = _super[name];\n\n                        // The method only need to be bound temporarily, so we\n                        // remove it when we're done executing\n                        var ret = fn.apply(this, arguments);\n                        this._super = tmp;\n\n                        return ret;\n                    };\n                })(name, prop[name]) :\n                prop[name];\n                //createLocalProperty(prop[name]);\n                //(typeof prop[name] === 'object' ? simpleClone(prop[name]) : prop[name]);\n        }\n\n        // The dummy class constructor\n        function Class() {\n            // All construction is actually done in the init method\n            if ( !initializing && this.init )\n                this.init.apply(this, arguments);\n        }\n\n        // Populate our constructed prototype object\n        Class.prototype = prototype;\n\n        // Enforce the constructor to be what we expect\n        Class.prototype.constructor = Class;\n\n        // And make this class extendable\n        Class.extend = arguments.callee;\n\n        return Class;\n    };\n})(this);\n\n}());\n\n\n\nIrLib.CoreObject = Class.extend({\n    /**\n     * @type {String}\n     */\n    __guid: null,\n\n    init: function () {\n        this.__guid = IrLib.CoreObject.createGuid();\n    },\n\n    /**\n     * Returns the global unique ID of the object\n     *\n     * @returns {String}\n     */\n    guid: function () {\n        return this.__guid;\n    },\n\n    /**\n     * Defines a new property with the given key and descriptor\n     *\n     * @param {String} key\n     * @param {Object} descriptor\n     * @returns {IrLib.CoreObject}\n     * @see Object.defineProperty()\n     */\n    defineProperty: function (key, descriptor) {\n        if (descriptor.overwrite === false && this[key]) {\n            return this;\n        }\n        Object.defineProperty(this, key, descriptor);\n        return this;\n    },\n\n    /**\n     * Defines new properties form the given properties\n     *\n     * @param {Object} properties\n     * @returns {IrLib.CoreObject}\n     * @see Object.defineProperties()\n     */\n    defineProperties: function (properties) {\n        Object.defineProperties(this, properties);\n        return this;\n    },\n\n    /**\n     * Returns a clone of this object\n     *\n     * @returns {*}\n     */\n    clone: function () {\n        var source = this,\n            _clone = new (source.constructor)();\n        for (var attr in source) {\n            if (source.hasOwnProperty(attr)) {\n                _clone[attr] = source[attr];\n            }\n        }\n        _clone.__guid = IrLib.CoreObject.createGuid();\n        return _clone;\n    },\n\n    /**\n     * Creates a callback function with bound this\n     *\n     * @param {Function|String} method\n     * @returns {Function}\n     */\n    bind: function (method) {\n        var _this = this,\n            impl;\n\n        if (typeof method === 'function') {\n            impl = method;\n        } else if (typeof _this[method] === 'function') {\n            impl = _this[method];\n        } else {\n            throw new IrLib.Error('Argument method must be either a method name or a function');\n        }\n\n        return function () {\n            var __preparedArguments = Array.prototype.slice.call(arguments);\n            __preparedArguments.push(this);\n            return impl.apply(_this, __preparedArguments);\n        };\n    }\n});\nIrLib.CoreObject.__lastGuid = 0;\nIrLib.CoreObject.createGuid = function () {\n    return 'irLib-' + (++IrLib.CoreObject.__lastGuid);\n};\n\n\n}());\n\n\n(function() {/*    require('error\\/*');// */\n\n/**\n * Created by COD on 14.04.15.\n */\nvar _Error = IrLib.Error = function (message, code, userInfo) {\n    this.message = message;\n    this.code = code;\n    this.userInfo = userInfo;\n};\n\n_Error.prototype = Object.create(Error.prototype);\n_Error.prototype = {\n    constructor: _Error,\n    toString: function() {\n        return '[IrLib.Error] ' +\n            (this.code ? '#' + this.code + ':' : '') +\n            this.message;\n    }\n};\n\n\n/**\n * Created by COD on 14.04.15.\n */\nIrLib.MissingImplementationError = function (message, code) {\n    this.message = message;\n    this.code = code || 1435238939;\n};\n\nIrLib.MissingImplementationError.prototype = Object.create(Error.prototype);\nIrLib.MissingImplementationError.prototype = {\n    constructor: IrLib.MissingImplementationError,\n    toString: function() {\n        return '[IrLib.MissingImplementationError] ' +\n            (this.code ? '#' + this.code + ':' : '') +\n            this.message;\n    }\n};\n\n/**\n * Created by COD on 22.03.16.\n */\n/**\n * Created by COD on 14.04.15.\n */\nvar _Error = IrLib.TypeError = function (message, code, userInfo) {\n    this.message = message;\n    this.code = code;\n    this.userInfo = userInfo;\n};\n\n_Error.prototype = Object.create(TypeError.prototype);\n_Error.prototype = {\n    constructor: _Error,\n    toString: function() {\n        return '[IrLib.TypeError] ' +\n            (this.code ? '#' + this.code + ':' : '') +\n            this.message;\n    }\n};\n\n\n}());\n\n\n(function() {/*    require('utility\\/*');// */\n\n/**\n * Created by COD on 03.06.15.\n */\n\nIrLib.Utility = IrLib.Utility || {};\n\nvar _GeneralUtility = IrLib.Utility.GeneralUtility = {\n    /**\n     * Returns if the given element is a HTML node\n     *\n     * @param {*} element\n     * @returns {Boolean}\n     */\n    isDomNode: function (element) {\n        return !!(element && element.nodeName);\n    },\n\n    /**\n     * Returns the matching HTML node\n     *\n     * @param {*} element\n     * @returns {HTMLElement}\n     */\n    domNode: function (element) {\n        if (_GeneralUtility.isDomNode(element)) {\n            return element;\n        }\n        if (typeof element === 'string') {\n            return document.querySelector(element);\n        }\n        return null;\n    },\n\n    /**\n     * Tries to transform the given value into an array\n     *\n     * If the value is\n     * - undefined an empty array will be returned\n     * - an array it will be cloned and returned (the elements will not be cloned)\n     * - an object it's values will be returned\n     * - something else a new array will be returned with the value as it's single element\n     *\n     * @param {*} value\n     * @returns {*}\n     */\n    toArray: function (value) {\n        if (typeof value === 'undefined') {\n            return [];\n        }\n        if (Array.isArray(value)) {\n            return value.slice();\n        }\n        if (typeof value === 'object') {\n            var valueCollection = [],\n                keys = Object.keys(value),\n                keysLength = keys.length;\n            for (var i = 0; i < keysLength; i++) {\n                valueCollection.push(value[keys[i]]);\n            }\n            return valueCollection;\n        }\n        return [value];\n    },\n\n    /**\n     * Returns the value for the key path of the given object\n     *\n     * @param {String} keyPath Collection of object keys concatenated with a dot (\".\")\n     * @param {Object} object Root object to fetch the property\n     * @param {Boolean} [graceful] Do not throw an exception for unresolved key paths\n     * @returns {*}\n     */\n    valueForKeyPathOfObject: function (keyPath, object, graceful) {\n        if (typeof keyPath !== 'string') {\n            throw new TypeError('Key path must be of type string, ' + (typeof keyPath) + ' given');\n        }\n        var keyPathParts = keyPath.split('.'),\n            keyPathPartsLength = keyPathParts.length,\n            currentValue = object,\n            currentKeyPathPart, i;\n\n        for (i = 0; i < keyPathPartsLength; i++) {\n            currentKeyPathPart = keyPathParts[i];\n            if (typeof currentValue !== 'object') {\n                if (!graceful) {\n                    throw new TypeError(\n                        'Can not get key ' + currentKeyPathPart + ' of value of type ' + (typeof currentValue)\n                    );\n                } else {\n                    return undefined;\n                }\n            }\n            currentValue = currentValue[currentKeyPathPart];\n        }\n        return currentValue;\n    },\n\n    /**\n     * Sets the value for the key path of the given object\n     *\n     * @param {*} value New value to set\n     * @param {String} keyPath Collection of object keys concatenated with a dot (\".\")\n     * @param {Object} object Root object to set the property\n     * @returns {*}\n     */\n    setValueForKeyPathOfObject: function (value, keyPath, object) {\n        if (typeof keyPath !== 'string') {\n            throw new TypeError('Key path must be of type string, ' + (typeof keyPath) + ' given');\n        }\n        var lastIndexOfDot = keyPath.lastIndexOf('.'), keyPathToParent, childKey, parentObject;\n\n        // Only the first level child should be modified\n        if (lastIndexOfDot === -1) {\n            parentObject = object;\n            childKey = keyPath;\n        } else {\n            keyPathToParent = keyPath.substr(0, lastIndexOfDot);\n            childKey = keyPath.substr(lastIndexOfDot + 1);\n\n            parentObject = _GeneralUtility.valueForKeyPathOfObject(keyPathToParent, object);\n        }\n        if (typeof parentObject !== 'object') {\n            throw new TypeError(\n                'Can not set key ' + keyPath + ' of value of type ' + (typeof parentObject)\n            );\n        }\n        parentObject[childKey] = value;\n    },\n\n    /**\n     * Returns if the given value is numeric\n     *\n     * @param {*} value\n     * @returns {boolean}\n     */\n    isNumeric: function (value) {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    },\n\n    /**\n     * Returns a deep copy of the given object\n     *\n     * @param {*}obj\n     * @param {Number} depth\n     * @returns {*}\n     */\n    clone: function (obj, depth) {\n        var copy;\n        if (arguments.length < 2) {\n            depth = 10;\n        }\n\n        // Handle the 3 simple types, and null or undefined\n        if (null === obj || \"object\" !== typeof obj) {\n            return obj;\n        }\n\n        // Handle Date\n        if (obj instanceof Date) {\n            copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            copy = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (depth - 1 > 0) {\n                    copy[i] = _GeneralUtility.clone(obj[i], depth - 1);\n                } else {\n                    copy[i] = obj[i];\n                }\n            }\n            return copy;\n        }\n\n        // Handle Object\n        copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) {\n                if (depth - 1 > 0) {\n                    copy[attr] = _GeneralUtility.clone(obj[attr], depth - 1);\n                } else {\n                    copy[attr] = obj[attr];\n                }\n            }\n        }\n        return copy;\n    },\n\n    /**\n     * Adds the class to the given element\n     *\n     * @param {*} element HTML node or selector\n     * @param {String} className\n     */\n    addClass: function (element, className) {\n        element = _GeneralUtility.domNode(element);\n        if (element) {\n            if (element.classList) {\n                element.classList.add(className);\n            } else {\n                element.className += ' ' + className;\n            }\n        }\n    }\n};\n\n\n/**\n * Created by COD on 14.04.15.\n */\nvar ef = function () {\n};\n\nvar Logger = IrLib.Logger = (typeof console === 'object' ? console : {});\n\nif (!Logger.log) {\n    Logger.log = ef;\n}\nif (!Logger.debug) {\n    Logger.debug = ef;\n}\nif (!Logger.info) {\n    Logger.info = ef;\n}\nif (!Logger.warn) {\n    Logger.warn = ef;\n}\nif (!Logger.error) {\n    Logger.error = ef;\n}\n\n\n}());\n\n\n(function() {/*    require('components\\/*');// */\n\n/**\n * Created by COD on 03.06.15.\n */\n\nvar GeneralUtility = IrLib.Utility.GeneralUtility;\nvar _Error = IrLib.Error;\n\n/**\n * @implements EventListener\n */\nIrLib.Controller = IrLib.CoreObject.extend({\n    /**\n     * @type {IrLib.View.Interface|IrLib.View.Template|HTMLElement|String}\n     */\n    _view: null,\n\n    /**\n     * List of all registered events\n     *\n     * @type {String[]}\n     */\n    _registeredEvents: [],\n\n    /**\n     * Initialize the controller\n     *\n     * @param {HTMLElement|String} [view] A dom node or selector\n     */\n    init: function (view) {\n        if (arguments.length > 0) { // Check if the view argument is given\n            this.setView(view);\n        } else if (this.view) { // Check if a view is inherited\n            this.setView(this.view);\n        }\n        this.defineProperty('view', {\n            enumerable: true,\n            get: this.getView,\n            set: this.setView\n        });\n    },\n\n    /**\n     * Handle the DOM event\n     *\n     * @param {Event} event\n     * @returns {*}\n     */\n    handleEvent: function (event) {\n        var controller = this,\n            type = event.type,\n            target = event.target,\n            _events = controller.events,\n            targetsTargetAttribute, imp;\n\n        // Workaround for jsdom based unit tests\n        if (!_events && typeof event.irController === 'object') {\n            controller = event.irController;\n            _events = controller.events;\n        }\n\n        // Check if the data-irlib-target attribute is set\n        if (typeof target.getAttribute === 'function') {\n            targetsTargetAttribute = target.getAttribute('data-irlib-target');\n        }\n\n        // If the data-irlib-target attribute is set look for a matching implementation\n        if (targetsTargetAttribute) {\n            var matchingImpName = Object.keys(_events).filter(function (eventIdentifier) {\n                var eventIdentifierParts = eventIdentifier.split(':');\n\n                return eventIdentifierParts.length > 1 &&\n                    eventIdentifierParts[1] === targetsTargetAttribute && // Matching target attribute\n                    eventIdentifierParts[0] === type // Matching event type\n                    ;\n            });\n\n            if (matchingImpName.length > 0) {\n                imp = _events[matchingImpName[0]];\n            }\n        }\n\n        if (!imp && _events && _events[type]) {\n            imp = _events[type];\n        }\n\n        if (typeof imp === 'function') {\n            return imp.call(controller, event);\n        } else if (imp) {\n            IrLib.Logger.error('Event handler implementation is of type ' + (typeof event));\n            return false;\n        }\n        return true;\n    },\n\n    /**\n     * Sets the view\n     *\n     * @param {IrLib.View.Interface|IrLib.View.Template|HTMLElement|String} view A View object, dom node or selector\n     */\n    setView: function (view) {\n        this._assertView(view);\n        if (typeof view === 'string') { // If the view is a selector\n            this._view = GeneralUtility.domNode(view);\n        } else {\n            this._view = view;\n        }\n    },\n\n    /**\n     * Returns the view\n     *\n     * @returns {IrLib.View.Interface|IrLib.View.Template|HTMLElement|String}\n     */\n    getView: function () {\n        return this._view;\n    },\n\n    /**\n     * Register the Controller as event listener for each event\n     *\n     * @returns {IrLib.Controller}\n     */\n    catchAllViewEvents: function () {\n        var registeredEvents = this._registeredEvents,\n            inline_splitEventIdentifier = this._splitEventIdentifier,\n            _view = this.view,\n            domElement, property;\n        if (_view) {\n            if (_view instanceof IrLib.View.Interface) {\n                domElement = document.createElement('div');\n            } else {\n                domElement = _view;\n            }\n\n            for (property in domElement) {\n                if (property.substr(0, 2) === 'on') {\n                    registeredEvents.push(\n                        inline_splitEventIdentifier(property.substr(2))[0]\n                    );\n                }\n            }\n            this._addListenersForRegisteredEventTypes();\n        } else {\n            IrLib.Logger.warn('Can not catch all events because the view not set');\n        }\n        return this;\n    },\n\n    /**\n     * Register the Controller as event listener for each of the callbacks defined in\n     * the events property\n     *\n     * @returns {IrLib.Controller}\n     */\n    initializeEventListeners: function () {\n        var registeredEvents = this._registeredEvents,\n            inline_splitEventIdentifier = this._splitEventIdentifier,\n            _view = this.view,\n            _eventNames, i;\n        if (_view) {\n            _eventNames = this.eventNames();\n            for (i = 0; i < _eventNames.length; i++) {\n                registeredEvents.push(inline_splitEventIdentifier(_eventNames[i])[0]);\n            }\n            this._addListenersForRegisteredEventTypes();\n        } else {\n            IrLib.Logger.warn('Can not add event listener because the view not set');\n        }\n        return this;\n    },\n\n    /**\n     * Removes the event listeners\n     */\n    removeEventListeners: function () {\n        var registeredEvents = this._registeredEvents,\n            _view = this.view,\n            i;\n        if (_view) {\n            for (i = 0; i < registeredEvents.length; i++) {\n                _view.removeEventListener(registeredEvents[i], this, false);\n            }\n            this._registeredEvents = [];\n        } else {\n            IrLib.Logger.warn('Can not remove event listeners because the view not set');\n        }\n    },\n\n    /**\n     * Returns the event names\n     *\n     * @returns {Array}\n     */\n    eventNames: function () {\n        return Object.keys(this.events);\n    },\n\n    /**\n     * Actually add the event listeners listed in _registeredEvents to the View\n     *\n     * @private\n     */\n    _addListenersForRegisteredEventTypes: function () {\n        var registeredEvents = this._registeredEvents,\n            registeredEventsLength = registeredEvents.length,\n            _view = this.view,\n            i;\n        if (_view) {\n            for (i = 0; i < registeredEventsLength; i++) {\n                _view.addEventListener(registeredEvents[i], this, false);\n            }\n        }\n    },\n\n    /**\n     * Split the given event identifier into it's type and action-target parts\n     *\n     * Example:\n     *  click:my-action => click, my-action\n     *  click:data-attribute-to-match => click, data-attribute-to-match\n     *\n     * @param {String} eventIdentifier\n     * @returns {String[]}\n     * @private\n     */\n    _splitEventIdentifier: function (eventIdentifier) {\n        return eventIdentifier.split ? eventIdentifier.split(':') : eventIdentifier;\n    },\n\n    /**\n     * Tests if the given value is a view\n     *\n     * @param {*} view\n     * @private\n     */\n    _assertView: function (view) {\n        if (!view) {\n            throw new _Error('No view given', 1433355412);\n        }\n\n        var ViewInterface = IrLib.View && IrLib.View.Interface ? IrLib.View.Interface : function () {\n        };\n        if (!GeneralUtility.domNode(view) && !(view instanceof ViewInterface)) {\n            throw new _Error('No view given', 1433355412, view);\n        }\n    },\n\n    /**\n     * Registered event handler methods\n     */\n    events: {}\n});\n\n/**\n * Created by COD on 25.06.15.\n */\nvar _Error = IrLib.Error;\nIrLib.Dictionary = IrLib.CoreObject.extend({\n    /**\n     * Initialize the Service Locator\n     */\n    init: function (initializationValues) {\n        /**\n         * Initialize the instance with the keys and values from the given object\n         *\n         * @param initializationValues\n         * @returns {IrLib.Dictionary}\n         * @private\n         */\n        var _initWithObject = function (initializationValues) {\n            var keys = Object.keys(initializationValues),\n                keysLength = keys.length,\n                currentKey;\n            for (var i = 0; i < keysLength; i++) {\n                currentKey = keys[i];\n                this[currentKey] = initializationValues[currentKey];\n            }\n        };\n\n        if (arguments.length > 0) {\n            if (typeof initializationValues !== 'object') {\n                throw new _Error(\n                    'Initialization argument has to be of type object, ' + (typeof initializationValues) + ' given',\n                    1435219260\n                );\n            }\n            if (initializationValues === null) {\n                initializationValues = {};\n            }\n            _initWithObject.call(this, initializationValues);\n        }\n        return this;\n    },\n\n    /**\n     * Returns the dictionary's values as array\n     *\n     * @returns {Array}\n     */\n    values: function () {\n        var valueCollection = [],\n            keys = this.keys(),\n            keysLength = keys.length;\n        for (var i = 0; i < keysLength; i++) {\n            valueCollection.push(this[keys[i]]);\n        }\n        return valueCollection;\n    },\n\n    /**\n     * Returns the dictionary's keys as array\n     *\n     * @returns {Array}\n     */\n    keys: function () {\n        return Object.keys(this);\n    },\n\n    /**\n     * Invokes the callback for each key value pair in the Dictionary, passing in the value, key and dictionary\n     *\n     * Callback schema: function(value, key, dictionary) {}\n     *\n     * @param {Function} callback\n     * @param {Object} [thisArg]\n     */\n    forEach: function(callback, thisArg) {\n        this.map(callback, thisArg);\n    },\n\n    /**\n     * Creates a new array with the results of invoking the given callback for each key value pair in the Dictionary.\n     *\n     * Callback schema: function(value, key, dictionary) { return newValue; }\n     *\n     * @param {Function} callback\n     * @param {Object} [thisArg]\n     */\n    map: function(callback, thisArg) {\n        if (typeof callback !== 'function') {\n            throw new TypeError('Argument \"callback\" is not of type function');\n        }\n        var valueCollection = [],\n            keys = this.keys(),\n            keysLength = keys.length,\n            preparedCallback = callback,\n            currentKey, currentValue;\n\n        if (thisArg) {\n            preparedCallback = callback.bind(thisArg);\n        }\n\n        for (var i = 0; i < keysLength; i++) {\n            currentKey = keys[i];\n            currentValue = this[currentKey];\n            valueCollection.push(preparedCallback(currentValue, currentKey, this));\n        }\n        return valueCollection;\n    }\n});\n\n\n/**\n * Class representing a file system path\n * @param {String} path\n * @constructor\n */\nIrLib.Path = function (path) {\n    this.absolute = false;\n    if (!path) {\n        this.components = [];\n    }\n    else {\n        if (path.charAt(0) === '/') {\n            this.absolute = true;\n        }\n        this.components = path.split('/').filter(function (item) {\n            return !!item;\n        });\n    }\n};\n\n/**\n * Returns a string representation of the path\n *\n * @returns {string}\n */\nIrLib.Path.prototype.toString = function () {\n    return (this.absolute ? '/' : '') + this.components.join('/');\n};\n\n/**\n * Returns if the path is absolute\n *\n * @returns {boolean}\n */\nIrLib.Path.prototype.isAbsolute = function () {\n    return this.absolute;\n};\n\n/**\n * Returns if the path is relative\n *\n * @returns {boolean}\n */\nIrLib.Path.prototype.isRelative = function () {\n    return !this.absolute;\n};\n\n/**\n * Created by COD on 03.06.15.\n */\nvar GeneralUtility = IrLib.Utility.GeneralUtility;\nvar _Error = IrLib.Error;\nIrLib.ServiceLocator = IrLib.CoreObject.extend({\n    /**\n     * @type {Object}\n     */\n    services: null,\n\n    /**\n     * @type {Object}\n     */\n    serviceFactory: null,\n\n    /**\n     * @type {Number}\n     */\n    recursionLevel: 0,\n\n    /**\n     * Initialize the Service Locator\n     */\n    init: function () {\n        this.services = {};\n        this.serviceFactory = {};\n\n        this.set('serviceLocator', this);\n    },\n\n    /**\n     * Register multiple factory/constructor-identifier combinations\n     *\n     * @param {Object} configuration\n     * @returns {IrLib.ServiceLocator}\n     */\n    registerMultiple: function (configuration) {\n        var identifiers = Object.keys(configuration),\n            identifier, i;\n        for (i = 0; i < identifiers.length; i++) {\n            identifier = identifiers[i];\n            this.register(identifier, configuration[identifier]);\n        }\n        return this;\n    },\n\n    /**\n     * Register the factory/constructor for the given service identifier\n     *\n     * @param {String} identifier\n     * @param {Function} constructor\n     * @returns {IrLib.ServiceLocator}\n     */\n    register: function (identifier, constructor) {\n        this._assertIdentifier(identifier);\n        this._assertFactory(constructor);\n\n        this.serviceFactory[identifier] = constructor;\n        return this;\n    },\n\n    /**\n     * Sets the instance for the given service identifier\n     *\n     * @param {String} identifier\n     * @param {Object} instance\n     * @returns {IrLib.ServiceLocator}\n     */\n    set: function (identifier, instance) {\n        this._assertIdentifier(identifier);\n\n        this.services[identifier] = instance;\n        return this;\n    },\n\n    /**\n     * Returns the instance for the given service identifier\n     *\n     * If a service instance for the given identifier is already registered, it will be returned. If no instance is\n     * found a matching service factory is looked up. If none is found an exception will be thrown\n     *\n     * @param {String} identifier\n     * @returns {Object}\n     */\n    get: function (identifier) {\n        this._assertIdentifier(identifier);\n\n        var instance = this.services[identifier];\n        if (!instance) {\n            instance = this.create(identifier);\n            this.set(identifier, instance);\n        }\n        return instance;\n    },\n\n    /**\n     * Creates a new instance for the given service identifier and will invoke didResolveDependencies if it exists\n     *\n     * @param {String} identifier\n     * @param {*} [additionalArgument]\n     * @returns {Object}\n     */\n    create: function (identifier, additionalArgument) {\n        this._assertIdentifier(identifier);\n\n        var withArgument = arguments.length > 1,\n            instance, _serviceFactoryCallback;\n\n        if (arguments.length > 2) {\n            throw new _Error('Too many arguments');\n        }\n\n        _serviceFactoryCallback = this.serviceFactory[identifier];\n        if (!_serviceFactoryCallback) {\n            throw new _Error('Could not find service with identifier ' + identifier);\n        }\n        if (_serviceFactoryCallback.prototype && _serviceFactoryCallback.prototype.constructor) {\n            instance = this.resolveDependencies(\n                withArgument ? new _serviceFactoryCallback(additionalArgument) : new _serviceFactoryCallback(),\n                _serviceFactoryCallback\n            );\n        } else {\n            instance = withArgument ? _serviceFactoryCallback(additionalArgument) : _serviceFactoryCallback();\n        }\n\n        if (typeof instance.didResolveDependencies === 'function') {\n            instance.didResolveDependencies();\n        }\n\n        return instance;\n    },\n\n    /**\n     * Resolves the dependencies defined in the prototype's \"needs\" property\n     *\n     * @param {Object} instance\n     * @param {Class} serviceClass\n     * @returns {Object}\n     */\n    resolveDependencies: function (instance, serviceClass) {\n        var dependencies = null;\n\n        if (instance && typeof instance.needs === 'object') {\n            dependencies = instance.needs;\n        }\n        if (serviceClass.needs && typeof serviceClass.needs === 'function') {\n            dependencies = serviceClass.needs();\n        }\n\n        if (dependencies) {\n            var dependenciesLength = dependencies.length,\n                dependency, dependencyProperty, dependencyIdentifier, i;\n\n            if (++this.recursionLevel > 1000) {\n                throw new _Error('Maximum recursion level exceeded', 1434301204);\n            }\n            for (i = 0; i < dependenciesLength; i++) {\n                dependency = dependencies[i].split(':', 2);\n                dependencyIdentifier = dependency[0];\n                dependencyProperty = (dependency[1] || dependencyIdentifier);\n                instance[dependencyProperty] = this.get(dependencyIdentifier);\n            }\n            this.recursionLevel--;\n        }\n        return instance;\n    },\n\n    /**\n     * Tests if the given name is a valid service identifier\n     *\n     * @param {*} identifier\n     * @private\n     */\n    _assertIdentifier: function (identifier) {\n        if (typeof identifier !== 'string') {\n            throw new _Error('Given service name is not of type string', 1433683510);\n        }\n    },\n\n    /**\n     * Tests if the given value is a valid service factory\n     *\n     * @param {*} constructor\n     * @private\n     */\n    _assertFactory: function (constructor) {\n        if (typeof constructor !== 'function') {\n            throw new _Error('Given service constructor is not callable', 1433683511);\n        }\n    }\n});\n\n\n/**\n * Created by COD on 04.07.14.\n */\n/**\n * Object representation of an URL\n *\n * @param {String} href\n * @constructor\n */\nIrLib.Url = function (href) {\n    /**\n     * Adds the protocol if the URI starts with //\n     *\n     * @param {String} input\n     * @returns String}\n     * @private\n     */\n    this._prepareDoubleStash = function (input) {\n        if (input.substr(0, 2) === '//') {\n            if (typeof window !== 'undefined') {\n                return window.location.protocol + input;\n            }\n            return 'http:' + input;\n        }\n        return input;\n    };\n    if (arguments.length > 0) {\n        var parser = document.createElement('a'),\n            location = typeof window !== 'undefined' ? window.location : {};\n        parser.href = this._prepareDoubleStash('' + href);\n\n        // IrLib.Logger.log(parser.host);\n        // IrLib.Logger.log(parser.hostname);\n        // IrLib.Logger.log(parser.protocol);\n\n        this._protocol = parser.protocol && parser.protocol !== ':' ? parser.protocol : location.protocol;   // => \"http:\"\n        this._port = parser.port || location.port;           // => \"3000\"\n        this._hostname = parser.hostname || location.hostname;   // => \"example.com\"\n        this._host = parser.host || (this._port ? this._hostname + ':' + this._port : this._hostname);           // => \"example.com:3000\"\n        this.setPathname(parser.pathname || location.pathname);  // => \"/pathname/\"\n        this.setHash(parser.hash);          // => \"#hash\"\n        this.setSearch(parser.search);      // => \"?search=test\"\n    } else {\n        this._protocol = '';\n        this._host = '';\n        this._hostname = '';\n        this._port = '';\n        this._hash = '';\n        this._search = '';\n        this.setPathname('');\n    }\n\n    Object.defineProperties(this, {\n        'host': {\n            get: this.getHost,\n            set: this.setHost\n        },\n        'hostname': {\n            get: this.getHostname,\n            set: this.setHostname\n        },\n        'port': {\n            get: this.getPort,\n            set: this.setPort\n        },\n        'pathname': {\n            get: this.getPathname,\n            set: this.setPathname\n        },\n        'hash': {\n            get: this.getHash,\n            set: this.setHash\n        },\n        'protocol': {\n            get: this.getProtocol,\n            set: this.setProtocol\n        },\n        'search': {\n            get: this.getSearch,\n            set: this.setSearch\n        }\n    });\n};\n\n/**\n * Returns the current browser URL\n *\n * @returns {IrLib.Url}\n */\nIrLib.Url.current = function () {\n    if (typeof window === 'undefined') {\n        throw new IrLib.TypeError('window not defined in this context');\n    }\n    return new IrLib.Url(window.location.href);\n};\n\nIrLib.Url.prototype = {\n    /**\n     * Returns the host\n     * @returns {String}\n     */\n    getHost: function () {\n        return this._host;\n    },\n\n    /**\n     * Sets the host\n     * @returns {String}\n     */\n    setHost: function (newValue) {\n        var hostDefinitionParts = newValue.split(':');\n        this._host = newValue;\n        this._hostname = hostDefinitionParts[0];\n        this._port = hostDefinitionParts[1];\n    },\n\n    /**\n     * Returns the hostname\n     * @returns {String}\n     */\n    getHostname: function () {\n        return this._hostname;\n    },\n\n    /**\n     * Sets the hostname\n     * @returns {String}\n     */\n    setHostname: function (newValue) {\n        this._hostname = newValue;\n        this._host = newValue + ':' + this._port;\n    },\n\n    /**\n     * Returns the port\n     * @returns {String}\n     */\n    getPort: function () {\n        return this._port;\n    },\n\n    /**\n     * Sets the port\n     * @returns {String}\n     */\n    setPort: function (newValue) {\n        this._port = newValue;\n        this._host = this._hostname + ':' + newValue;\n    },\n\n    /**\n     * Returns the protocol\n     *\n     * @returns {String}\n     */\n    getProtocol: function () {\n        return this._protocol;\n    },\n\n    /**\n     * Sets the protocol\n     *\n     * @param {String} newValue\n     */\n    setProtocol: function (newValue) {\n        this._protocol = newValue;\n    },\n\n    /**\n     * Returns the pathname\n     *\n     * @returns {String}\n     */\n    getPathname: function () {\n        return this._pathname;\n    },\n\n    /**\n     * Sets the pathname\n     *\n     * @param {String} newValue\n     */\n    setPathname: function (newValue) {\n        newValue = '' + newValue;\n        if (!newValue || newValue[0] !== '/') {\n            newValue = '/' + newValue;\n        }\n        this._pathname = newValue;\n    },\n\n    /**\n     * Returns the hash\n     *\n     * @returns {String}\n     */\n    getHash: function () {\n        return this._hash;\n    },\n\n    /**\n     * Sets the hash\n     *\n     * @param {String} newValue\n     */\n    setHash: function (newValue) {\n        newValue = '' + newValue;\n        if (newValue && newValue.charAt(0) !== '#') {\n            newValue = '#' + newValue;\n        }\n        this._hash = newValue;\n    },\n\n    /**\n     * Returns the search\n     *\n     * @returns {String}\n     */\n    getSearch: function () {\n        return this._search;\n    },\n\n    /**\n     * Sets the search\n     *\n     * @param {String} newValue\n     */\n    setSearch: function (newValue) {\n        newValue = '' + newValue;\n        if (newValue && newValue[0] !== '?') {\n            newValue = '?' + newValue;\n        }\n        this._search = newValue;\n    },\n\n    /**\n     * Returns if the URL is local\n     *\n     * @returns {boolean}\n     */\n    isLocal: function () {\n        return window.location.host == this.host;\n    },\n\n    /**\n     * Returns if the URL is equal to the current page\n     *\n     * @param {boolean} [ignoreSearch] If set to TRUE the URL's search/query part will not be compared\n     * @returns {boolean}\n     */\n    isSamePage: function (ignoreSearch) {\n        var pageUrl = IrLib.Url.current();\n        return (\n            pageUrl.host == this.host &&\n            pageUrl._protocol === this._protocol &&\n            pageUrl.pathname === this.pathname &&\n            (ignoreSearch || pageUrl.search === this.search)\n        );\n    },\n\n    /**\n     * Returns if the URL fully matches the current location\n     *\n     * @returns {boolean}\n     */\n    isCurrent: function () {\n        return this.isEqualTo(IrLib.Url.current());\n    },\n\n    /**\n     * Returns if the URL is equal to the given URL\n     *\n     * @param {String|IrLib.Url} url\n     * @returns {boolean}\n     */\n    isEqualTo: function (url) {\n        return (\"\" + url) == (\"\" + this);\n    },\n\n    /**\n     * Returns a string representation of the URL object\n     *\n     * @returns {string}\n     */\n    toString: function () {\n        return (this._protocol ? this._protocol + '//' : '') +\n            this.host +\n            this.pathname +\n            this.search +\n            this._hash;\n    }\n};\n\n\n}());\n\n\n(function() {/*    require('view\\/interface');// */\n\n}());\n\n\n(function() {/*    require('view\\/*');// */\n\n/**\n * Created by COD on 25.06.15.\n */\n(function() {/*require('view\\/interface');// */\n\n}());\n\n\n(function() {/*require('view\\/abstract-variable-view');// */\n\n/**\n * Created by COD on 25.06.15.\n */\n(function() {/*require('view\\/interface');// */\n\n/**\n * Created by COD on 25.06.15.\n */\n\nIrLib.View = IrLib.View || {};\n\n/**\n * Defines a common interface for Views\n *\n * @implements IrLib.View.SubViewInterface\n * @interface\n */\nIrLib.View.Interface = IrLib.CoreObject.extend({\n    init: function (template, variables) {\n        this._super();\n    },\n\n    /**\n     * Renders the template\n     *\n     * @return {Node|HTMLElement}\n     * @abstract\n     */\n    render: function () {\n        throw new IrLib.MissingImplementationError('render');\n    },\n\n    /**\n     * Set the variables\n     *\n     * @param {Object|IrLib.Dictionary} data\n     * @return {IrLib.View.Interface}\n     * @abstract\n     */\n    setVariables: function (data) {\n        throw new IrLib.MissingImplementationError('setVariables');\n    },\n\n    /**\n     * Add the variable with the given key and value\n     *\n     * @param {String} key\n     * @param {*} value\n     * @return {IrLib.View.Interface}\n     * @abstract\n     */\n    assignVariable: function (key, value) {\n        throw new IrLib.MissingImplementationError('assignVariable');\n    },\n\n    /**\n     * Appends the View to the given DOM element, while replacing the previously rendered element\n     *\n     * @param {Node|HTMLElement} element\n     * @return {IrLib.View.Interface}\n     * @abstract\n     */\n    appendTo: function (element) {\n        throw new IrLib.MissingImplementationError('appendTo');\n    },\n\n    /**\n     * Removes the element from it's parent\n     *\n     * @returns {IrLib.View.Interface}\n     * @abstract\n     */\n    remove: function () {\n        throw new IrLib.MissingImplementationError('remove');\n    },\n\n    /**\n     * Adds the given event listener to the View\n     *\n     * @param {String} type\n     * @param {EventListener|Function} listener\n     * @param {Boolean} [useCapture]\n     * @abstract\n     */\n    addEventListener: function (type, listener, useCapture) {\n        throw new IrLib.MissingImplementationError('addEventListener');\n    },\n\n    /**\n     * Dispatches an Event at the View, invoking the affected EventListeners in the appropriate order.\n     *\n     * The normal event processing rules (including the capturing and optional bubbling phase) apply to events\n     * dispatched manually with dispatchEvent().\n     *\n     * @param {Event} event\n     * @return {Boolean}\n     * @abstract\n     */\n    dispatchEvent: function (event) {\n        throw new IrLib.MissingImplementationError('dispatchEvent');\n    },\n\n    /**\n     * Returns the string representation of the rendered template\n     *\n     * @returns {String}\n     * @abstract\n     */\n    toString: function () {\n        throw new IrLib.MissingImplementationError('toString');\n    }\n});\n\n\n}());\n\n\n\n/**\n * An abstract context-aware view\n *\n * @implements IrLib.View.VariableViewInterface\n * @abstract\n */\nIrLib.View.AbstractVariableView = IrLib.View.Interface.extend({\n    /**\n     * Dictionary of template variables\n     *\n     * @type {IrLib.Dictionary}\n     */\n    _variables: null,\n\n    /**\n     * Dictionary of computed variables\n     *\n     * @type {IrLib.Dictionary}\n     */\n    _computed: null,\n\n    init: function () {\n        this._super();\n\n        if (typeof this.variables === 'object') {\n            this.setVariables(this.variables);\n        } else {\n            this.setVariables({});\n        }\n\n        if (typeof this.computed === 'object') { // Check if a computed variables are inherited\n            this.setComputed(this.computed);\n        }\n\n        this.defineProperties({\n            'variables': {\n                enumerable: true,\n                get: this.getVariables,\n                set: this.setVariables\n            },\n            'computed': {\n                enumerable: true,\n                get: this.getComputed,\n                set: this.setComputed\n            }\n        });\n    },\n\n    /**\n     * @abstract\n     */\n    toString: function () {\n        throw new IrLib.MissingImplementationError('assignVariable');\n    },\n\n    /**\n     * Sets the variables\n     *\n     * @param {Object|IrLib.Dictionary} data\n     * @returns {IrLib.View.Interface}\n     */\n    setVariables: function (data) {\n        if (typeof data !== 'object') {\n            throw new TypeError('Initialization argument has to be of type object, ' + (typeof data) + ' given');\n        }\n        if (data instanceof IrLib.Dictionary) {\n            this._variables = data;\n        } else {\n            this._variables = new IrLib.Dictionary(data);\n        }\n        this._needsRedraw = true;\n        return this;\n    },\n\n    /**\n     * Adds the variable with the given key and value\n     *\n     * @param {String} key\n     * @param {*} value\n     * @returns {IrLib.View.Interface}\n     */\n    assignVariable: function (key, value) {\n        this._variables[key] = value;\n        this._needsRedraw = true;\n        return this;\n    },\n\n    /**\n     * Returns the currently assigned variables\n     *\n     * @returns {IrLib.Dictionary}\n     */\n    getVariables: function () {\n        return this._variables;\n    },\n\n    /**\n     * Sets the registered computed variables\n     *\n     * @param {Object|IrLib.Dictionary} data\n     * @returns {IrLib.View.Interface}\n     */\n    setComputed: function (data) {\n        if (typeof data !== 'object') {\n            throw new TypeError('Initialization argument has to be of type object, ' + (typeof data) + ' given');\n        }\n        if (data instanceof IrLib.Dictionary) {\n            this._computed = data;\n        } else {\n            this._computed = new IrLib.Dictionary(data);\n        }\n        this._needsRedraw = true;\n        return this;\n    },\n\n    /**\n     * Returns the registered computed variables\n     *\n     * @returns {IrLib.Dictionary}\n     */\n    getComputed: function () {\n        return this._computed;\n    }\n});\n\n\n}());\n\n\n\n/**\n * An abstract context-aware view\n *\n * @implements IrLib.View.ContextInterface\n * @abstract\n */\nIrLib.View.AbstractContextAwareView = IrLib.View.AbstractVariableView.extend({\n    /**\n     * Views context\n     *\n     * @type {IrLib.View.Interface}\n     */\n    _context: null,\n\n    init: function () {\n        this._super();\n\n        if (typeof this.context !== 'undefined') { // Check if a context is inherited\n            this._context = this.context;\n        }\n\n        this.defineProperty(\n            'context',\n            {\n                enumerable: true,\n                get: this.getContext,\n                set: this.setContext\n            }\n        );\n    },\n\n    /**\n     * Returns the View's context\n     *\n     * @returns {IrLib.View.Interface}\n     */\n    getContext: function () {\n        return this._context;\n    },\n\n    /**\n     * Sets the View's context\n     *\n     * @param {IrLib.View.Interface} context\n     * @returns {IrLib.View.Interface}\n     */\n    setContext: function (context) {\n        this._context = context;\n        return this;\n    }\n});\n\n\n/**\n * Created by COD on 25.06.15.\n */\n(function() {/*require('view\\/interface');// */\n\n}());\n\n\n\n/**\n * An abstract view with DOM support\n *\n * @implements EventListener\n * @abstract\n */\nIrLib.View.AbstractDomView = IrLib.View.AbstractContextAwareView.extend({\n    /**\n     * Tag name for the HTML node that encapsulates the generated nodes\n     *\n     * @type {String}\n     */\n    tagName: 'div',\n\n    /**\n     * Registry of event listeners\n     *\n     * @type {Object}\n     */\n    _eventListeners: null,\n\n    /**\n     * Defines if a redraw is required\n     *\n     * @type {Boolean}\n     */\n    _needsRedraw: true,\n\n    /**\n     * DOM element\n     *\n     * @type {Node|HTMLElement}\n     */\n    _dom: null,\n\n    /**\n     * Last inserted node which should be replaced\n     *\n     * @type {Node}\n     */\n    _lastInsertedNode: null,\n\n    init: function () {\n        var _this = this;\n\n        this._super();\n\n        this._eventListeners = {};\n        if (typeof this.eventListeners === 'object') { // Check if a eventListeners variables are inherited\n            (new IrLib.Dictionary(this.eventListeners)).forEach(function(imp, key) {\n                _this.addEventListener(key, imp);\n            });\n        } else if (typeof this.events === 'object') { // Check if a events variables are inherited\n            (new IrLib.Dictionary(this.events)).forEach(function(imp, key) {\n                _this.addEventListener(key, imp);\n            });\n        }\n\n        this.defineProperty(\n            'needsRedraw',\n            {\n                enumerable: true,\n                get: this.getNeedsRedraw\n            }\n        );\n    },\n\n    /**\n     * Renders the template\n     *\n     * @return {Node|HTMLElement}\n     */\n    render: function () {\n        if (this._needsRedraw) {\n            delete this._dom;\n            var _template = this.template;\n            if (!_template) {\n                throw new ReferenceError('Template not specified');\n            }\n\n            this._dom = this._createDom(this.toString());\n            this._needsRedraw = false;\n        }\n        return this._dom;\n    },\n\n    /**\n     * Returns if a redraw is required\n     *\n     * @returns {Boolean}\n     */\n    getNeedsRedraw: function () {\n        return this._needsRedraw;\n    },\n\n    /**\n     * Returns if the View is in the visible DOM\n     *\n     * @returns {Boolean}\n     */\n    isVisible: function () {\n        var element = this._dom;\n        return !!(element && element.parentNode && document.body.contains(element));\n    },\n\n    /**\n     * Appends the View to the given DOM element, while replacing the previously rendered element\n     *\n     * @param {Node|HTMLElement} element\n     * @returns {IrLib.View.Interface}\n     */\n    appendTo: function (element) {\n        if (!element || typeof element.appendChild !== 'function') {\n            throw new TypeError('Given element is not a valid DOM Node');\n        }\n\n        this.render();\n\n        if (this._lastInsertedNode) {\n            element.replaceChild(this._dom, this._lastInsertedNode);\n        } else {\n            element.appendChild(this._dom);\n        }\n        this._lastInsertedNode = this._dom;\n\n        this.addStoredEventListeners();\n        return this;\n    },\n\n    /**\n     * Reloads the Views output in the DOM\n     *\n     * @param {Boolean} [force]\n     * @returns {IrLib.View.Interface}\n     */\n    reload: function (force) {\n        var lastParent = this._dom ? this._dom.parentNode : (this._lastInsertedNode ? this._lastInsertedNode.parentNode : null);\n        if (!lastParent) {\n            throw new ReferenceError('Can not reload because the view does not seem to be in the DOM');\n        }\n        if (force || this._needsRedraw) {\n            this._needsRedraw = true;\n            this.appendTo(lastParent);\n        }\n        return this;\n    },\n\n    /**\n     * Removes the element from it's parent\n     *\n     * @returns {IrLib.View.Interface}\n     */\n    remove: function () {\n        var lastInsertedNode = this._lastInsertedNode;\n        if (lastInsertedNode && lastInsertedNode.parentNode) {\n            lastInsertedNode.parentNode.removeChild(lastInsertedNode);\n            this._lastInsertedNode = null;\n        }\n        return this;\n    },\n\n    /**\n     * Handle the DOM event\n     *\n     * @param {Event} event\n     */\n    handleEvent: function (event) {\n        var imps = this._eventListeners[event.type],\n            patchedEvent, currentImp, i;\n\n        if (imps) {\n            patchedEvent = this._patchEvent(event);\n            for (i = 0; i < imps.length; i++) {\n                currentImp = imps[i];\n                if (typeof currentImp === 'undefined') {\n                    throw new TypeError('Implementation for event type \"' + event.type + '\" is undefined');\n                } else if (typeof currentImp === 'function') {\n                    currentImp.call(this, patchedEvent);\n                } else if (currentImp.handleEvent) {\n                    currentImp.handleEvent.call(currentImp, patchedEvent);\n                }\n            }\n        } else {\n            IrLib.Logger.log(event);\n        }\n    },\n\n    /**\n     * Create a patches version of the event and set it's target to the View\n     *\n     * @param {Event} event\n     * @returns {Event}\n     * @private\n     */\n    _patchEvent: function (event) {\n        event.irTarget = this;\n        return event;\n    },\n\n    /**\n     * Adds the given event listener to the View\n     *\n     * @param {String} type\n     * @param {EventListener|Function} listener\n     * @param {Boolean} [useCapture] Currently ignored\n     */\n    addEventListener: function (type, listener, useCapture) {\n        var _eventListeners = this._eventListeners;\n        if (!_eventListeners[type]) {\n            _eventListeners[type] = [listener];\n        }\n\n        if (_eventListeners[type].indexOf(listener) === -1) {\n            _eventListeners[type].push(listener);\n        }\n\n        this._addEventListeners(this.render(), [type]);\n    },\n\n    /**\n     * Add event listeners for each given event types to the element\n     *\n     * @param {HTMLElement} element\n     * @param {String[]} eventTypes\n     * @private\n     */\n    _addEventListeners: function (element, eventTypes) {\n        var eventTypesLength = eventTypes.length,\n            i, type;\n        for (i = 0; i < eventTypesLength; i++) {\n            type = eventTypes[i];\n            element.addEventListener(type, this);\n        }\n    },\n\n    /**\n     * Add the stored event listeners to the DOM Node\n     */\n    addStoredEventListeners: function() {\n        if (!this._dom) {\n            throw new ReferenceError('DOM is not render yet');\n        }\n        this._addEventListeners(this._dom, Object.keys(this._eventListeners));\n    },\n\n    /**\n     * Dispatches an Event at the View, invoking the affected EventListeners in the appropriate order.\n     *\n     * The normal event processing rules (including the capturing and optional bubbling phase) apply to events\n     * dispatched manually with dispatchEvent().\n     *\n     * @param {Event} event\n     * @return {Boolean}\n     */\n    dispatchEvent: function (event) {\n        this.render().dispatchEvent(event);\n    },\n\n    /**\n     * Creates the Document Object Model for the given template string\n     *\n     * @param {String} [template]\n     * @returns {Node|HTMLElement}\n     * @protected\n     */\n    _createDom: function (template) {\n        var root = document.createElement(this.tagName);\n        if (template) {\n            root.innerHTML = template;\n        }\n        return root;\n    },\n\n    /**\n     * Returns a clone of this object\n     *\n     * @returns {*}\n     */\n    clone: function() {\n        var source = this,\n            _clone = new (source.constructor)();\n        for (var attr in source) {\n            if (source.hasOwnProperty(attr)) {\n                if (attr === '_dom' || attr === '_lastInsertedNode' || attr === '_eventListeners') {\n                    continue;\n                }\n                _clone[attr] = source[attr];\n            }\n        }\n        _clone.__guid = IrLib.CoreObject.createGuid();\n        return _clone;\n    }\n});\n\n\n/**\n * Created by COD on 25.06.15.\n */\n\nIrLib.View = IrLib.View || {};\n\n/**\n * Defines a common interface for context aware Views\n *\n * @interface\n */\nIrLib.View.ContextInterface = function () {\n};\nIrLib.View.ContextInterface.prototype.setContext = function () {\n    throw new IrLib.MissingImplementationError('setContext');\n};\nIrLib.View.ContextInterface.prototype.getContext = function () {\n    throw new IrLib.MissingImplementationError('getContext');\n};\n\n\n/**\n * Created by COD on 25.06.15.\n */\n(function() {/*require('view\\/template');// */\n\n/**\n * Created by COD on 25.06.15.\n */\n\n/**\n * A template based view\n *\n * @implements EventListener\n * @implements IrLib.View.Interface\n * @implements IrLib.View.ContextInterface\n * @implements IrLib.View.SubViewInterface\n */\nIrLib.View.Template = IrLib.View.AbstractDomView.extend({\n    needs: ['serviceLocator'],\n\n    /**\n     * @type {IrLib.ServiceLocator}\n     */\n    serviceLocator: null,\n\n    /**\n     * Template to render\n     *\n     * @type {String}\n     */\n    _template: '',\n\n    /**\n     * Array of parse template blocks\n     *\n     * @type {IrLib.View.Parser.Block[]}\n     */\n    _templateBlocks: null,\n\n    /**\n     * Template parser instance\n     *\n     * @type {IrLib.View.Parser.Interface}\n     */\n    _templateParser: null,\n\n    /**\n     * Stack of last condition results\n     *\n     * @type {Boolean[]}\n     */\n    _lastConditionStateStack: [],\n\n    /**\n     * Registered sub views\n     *\n     * @type {IrLib.Dictionary}\n     */\n    _subviewPlaceholders: null,\n\n    /**\n     * Render the subviews as string\n     * @type {Boolean}\n     */\n    _renderSubviewsAsPlaceholders: false,\n\n    init: function (template, variables) {\n        this._super(template, variables);\n\n        if (arguments.length > 0) { // Check if the template argument is given\n            if (typeof template !== 'string') {\n                throw new TypeError('Argument \"template\" is not of type string');\n            }\n            this.setTemplate(template);\n        } else if (typeof this.template === 'string') { // Check if a template string is inherited\n            this.setTemplate(this.template.slice(0));\n        }\n\n        this._subviewPlaceholders = new IrLib.Dictionary();\n\n        if (arguments.length > 1) {\n            this.setVariables(variables);\n        }\n\n        this.defineProperties({\n            'template': {\n                enumerable: true,\n                get: this.getTemplate,\n                set: this.setTemplate\n            }\n        });\n    },\n\n    /**\n     * Returns the string representation of the rendered template\n     *\n     * @returns {String}\n     */\n    toString: function () {\n        return this._renderBlocks();\n    },\n\n    /**\n     * Renders the template\n     *\n     * @return {Node|HTMLElement}\n     */\n    render: function () {\n        if (this._needsRedraw) {\n            delete this._dom;\n            var _template = this.template;\n            if (!_template) {\n                throw new ReferenceError('Template not specified');\n            }\n\n            this._renderSubviewsAsPlaceholders = true;\n            this._dom = this._createDom(this.toString());\n            this._renderSubviewsAsPlaceholders = false;\n            this._needsRedraw = false;\n        }\n        return this._dom;\n    },\n\n    /**\n     * Replace the variables inside the given template\n     *\n     * @returns {String}\n     */\n    _renderBlocks: function () {\n        var BlockType = IrLib.View.Parser.BlockType,\n            State = IrLib.View.State,\n            templateBlocks = this.getTemplateBlocks(),\n            templateBlocksLength = templateBlocks.length,\n            inline_escapeHtml = this._escapeHtml,\n            inline_resolveVariable = this._resolveVariable.bind(this),\n            inline_renderExpression = this._renderExpression.bind(this),\n            renderedTemplate = '',\n            currentVariableValue, currentMeta, currentTemplateBlock, index;\n\n        for (index = 0; index < templateBlocksLength; index++) {\n            /** @var {IrLib.View.Parser.Block} currentTemplateBlock */\n            currentTemplateBlock = templateBlocks[index];\n            switch (currentTemplateBlock.type) {\n                case BlockType.VARIABLE:\n                    currentVariableValue = inline_resolveVariable(currentTemplateBlock.content);\n                    currentMeta = currentTemplateBlock.meta;\n                    if (!currentMeta.isSafe) {\n                        currentVariableValue = inline_escapeHtml(currentVariableValue);\n                    }\n\n                    renderedTemplate += currentVariableValue;\n                    break;\n\n                case BlockType.EXPRESSION:\n                    var state = new State(index, templateBlocks);\n                    renderedTemplate += inline_renderExpression(currentTemplateBlock, state);\n                    index = state.index;\n                    break;\n\n                case BlockType.STATIC:\n                /* falls through */\n                default:\n                    renderedTemplate += currentTemplateBlock.content;\n                    break;\n\n            }\n        }\n\n        return renderedTemplate;\n    },\n\n    /**\n     * Renders the expression of the current block\n     *\n     * @param {IrLib.View.Parser.Block} block\n     * @param {IrLib.View.State} state\n     * @returns {String}\n     * @private\n     */\n    _renderExpression: function (block, state) {\n        var ExpressionType = IrLib.View.Parser.ExpressionType,\n            expressionParts = block.content.split(' '),\n            lastConditionStateStack = this._lastConditionStateStack,\n            meta = block.meta,\n            output, view, viewId;\n\n        switch (meta.expressionType) {\n            case ExpressionType.VIEW:\n                view = this._resolveView(expressionParts[1]);\n                view.setContext(this);\n                view.setVariables(this.variables);\n\n                if (this._renderSubviewsAsPlaceholders) {\n                    // TODO: Handle insertion of the same views again\n                    viewId = 'irLibView-' + view.guid();\n                    //console.log(view.guid());\n                    this._subviewPlaceholders[viewId] = view;\n                    output = '<script id=\"' + viewId + '\" type=\"text/x-placeholder\"></script>';\n                } else {\n                    output = view.toString();\n                }\n                break;\n\n            case ExpressionType.ELSE:\n                if (lastConditionStateStack.pop() === true) {\n                    /* Skip forward to the closing block */\n                    state.index++;\n                    this._scanToEndExpression(ExpressionType.CONDITIONAL_START, ExpressionType.CONDITIONAL_END, state);\n                }\n                output = '';\n                break;\n\n            case ExpressionType.CONDITIONAL_START:\n                if (expressionParts.length < 2) {\n                    throw new ReferenceError('Condition missing');\n                }\n                var conditionKey = expressionParts[1],\n                    conditionValue = this._resolveVariable(conditionKey);\n\n                if (this._evaluateConditionValue(conditionValue)) {\n                    /* Continue rendering the next blocks */\n                    lastConditionStateStack.push(true);\n                } else {\n                    /* Skip forward to the closing or else block */\n                    state.index++;\n                    this._scanToEndExpression(ExpressionType.CONDITIONAL_START, ExpressionType.CONDITIONAL_END, state);\n                    lastConditionStateStack.push(false);\n                }\n                output = '';\n                break;\n\n            case ExpressionType.CONDITIONAL_END:\n                output = '';\n                //output = ' eni ';\n                break;\n\n            case ExpressionType.UNKNOWN:\n            /* falls through */\n            default:\n                output = '{%' + block.content + '%}';\n        }\n\n        return output;\n    },\n\n    /**\n     * Evaluate the condition value\n     *\n     * @param {*} conditionValue\n     * @returns {boolean}\n     * @private\n     */\n    _evaluateConditionValue: function (conditionValue) {\n        return (\n            (Array.isArray(conditionValue) && conditionValue.length > 0) ||\n            (typeof conditionValue === 'object' && Object.keys(conditionValue).length > 0) || !!conditionValue\n        );\n    },\n\n    /**\n     * Skip forward to the matching end block\n     *\n     * @param {IrLib.View.Parser.ExpressionType|string} startExpression\n     * @param {IrLib.View.Parser.ExpressionType|string} endExpression\n     * @param {IrLib.View.State} state\n     * @private\n     */\n    _scanToEndExpression: function (startExpression, endExpression, state) {\n        var blockStream = state.blockStream,\n            blockStreamLength = blockStream.length,\n            EXPRESSION = IrLib.View.Parser.BlockType.EXPRESSION,\n            EXPRESSION_TYPE_ELSE = IrLib.View.Parser.ExpressionType.ELSE,\n            nestingDepth = 1,\n            i = state.index,\n            balanced = false,\n            block, expressionType;\n\n        for (; i < blockStreamLength; i++) {\n            /** @type {IrLib.View.Parser.Block} */\n            block = blockStream[i];\n            if (block.type === EXPRESSION) {\n                expressionType = block.meta.expressionType;\n                if (expressionType === startExpression) { // Start of a new if/for\n                    nestingDepth++;\n                } else if (expressionType === endExpression) { // End of the last if/for\n                    nestingDepth--;\n                    if (nestingDepth < 1) {\n                        balanced = true;\n                        break;\n                    }\n                } else if (nestingDepth === 1 && expressionType === EXPRESSION_TYPE_ELSE) { // Matching else was found\n                    balanced = true;\n                    break;\n                }\n            }\n        }\n\n        if (!balanced) {\n            IrLib.Logger.log('Not balanced');\n        }\n        state.index = i;\n    },\n\n    /**\n     * Resolve the variable for the given key path\n     *\n     * @param {String} keyPath\n     * @returns {*}\n     * @private\n     */\n    _resolveVariable: function (keyPath) {\n        var result;\n        try {\n            result = IrLib.Utility.GeneralUtility.valueForKeyPathOfObject(keyPath, this.getVariables(), false);\n            if (typeof result === 'function') {\n                result = result(this);\n            }\n        } catch (error) {\n            if (!(error instanceof TypeError)) {\n                throw error;\n            }\n        }\n\n        if (!result && keyPath.indexOf('.') === -1) { // Key paths for computed variables must NOT contain a dot\n            result = this._resolveAndEvaluateComputed(keyPath);\n        }\n\n        return result !== undefined ? result : '';\n    },\n\n    /**\n     * Resolve the variable for the given key path\n     *\n     * @param {String} key\n     * @returns {*}\n     * @private\n     */\n    _resolveAndEvaluateComputed: function (key) {\n        var _computed = this.computed,\n            registeredComputed;\n        if (!_computed) {\n            return undefined;\n        }\n        registeredComputed = _computed[key];\n        if (typeof registeredComputed === 'function') {\n            return registeredComputed.call(this);\n        }\n        return undefined;\n    },\n\n    /**\n     * Resolve the requested View\n     *\n     * @param {String} viewIdentifier\n     * @returns {IrLib.View.SubViewInterface}\n     * @private\n     */\n    _resolveView: function (viewIdentifier) {\n        var _serviceLocator = this.serviceLocator,\n            view;\n\n        if (!_serviceLocator) {\n            throw new ReferenceError('Service Locator must be set to resolve views for identifier \"' + viewIdentifier + '\"');\n        }\n        try {\n            view = this.serviceLocator.get(viewIdentifier);\n        } catch (exception) {\n        }\n        if (view instanceof IrLib.View.Interface) {\n            return view;\n        }\n        throw new ReferenceError('No view for identifier \"' + viewIdentifier + '\"');\n    },\n\n    /**\n     * Escapes the given input\n     *\n     * @param {String} string\n     * @returns {string}\n     * @private\n     */\n    _escapeHtml: function (string) {\n        var entityMap = {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#39;',\n            '/': '&#x2F;'\n        };\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    },\n\n    ///**\n    // * Renders the actions inside the given template\n    // *\n    // * @param {String} template\n    // * @returns {String}\n    // */\n    //_renderActions: function (template) {\n    //    var actionRegularExpression = /\\s\\{\\{action:([\\w\\-]*)}}\\s/g,\n    //        _document = $(document),\n    //        matches = [], found, i, _this;\n    //\n    //    /**\n    //    * @type {Iresults.Modal}\n    //    * @private\n    //    */\n    //    _this = this;\n    //\n    //    while (found = actionRegularExpression.exec(template)) {\n    //        matches.push({\n    //            expression: found[0],\n    //            action: found[1]\n    //        });\n    //        actionRegularExpression.lastIndex -= found[0].split(':')[1].length;\n    //    }\n    //\n    //    for (i = 0; i < matches.length; i++) {\n    //        var elementId = Iresults.Modal.actionElementIds.length,\n    //            actionDefinition = matches[i],\n    //            actionName = actionDefinition.action,\n    //            expression = actionDefinition.expression,\n    //            elementIdString = 'ir-modal-' + elementId,\n    //            elementIdAttribute = ' id=\"' + elementIdString + '\" ',\n    //            data\n    //            ;\n    //        Iresults.Modal.actionElementIds.push(elementId);\n    //\n    //        data = {\n    //            action: actionName\n    //        };\n    //\n    //        /* Prepare the template */\n    //        template = template.replace(expression, elementIdAttribute);\n    //\n    //        /* Register the click handler */\n    //        _document.on('click', '#' + elementIdString, data, function(event) {\n    //            var actionName = event.data.action,\n    //                imp = _this.controller.actions ? _this.controller.actions[actionName] : _this.controller[actionName];\n    //\n    //            if (!imp) {\n    //                throw new Iresults.ActionError('No implementation for method \"' + actionName + '\"');\n    //            }\n    //            imp.call(_this.controller, event);\n    //        });\n    //    }\n    //\n    //    return template;\n    //},\n\n    /**\n     * Replace the placeholders for subviews with the actual view instances\n     */\n    replaceSubviewPlaceholders: function () {\n        var _dom = this._dom;\n\n        this._subviewPlaceholders.forEach(function (view, elementId) {\n            var placeholder = _dom.querySelector('#' + elementId);\n\n            //console.log(placeholder, elementId, view.render());\n\n            if (placeholder && placeholder.parentNode) {\n                placeholder.parentNode.replaceChild(view.render(), placeholder);\n                view.addStoredEventListeners();\n            } else {\n                throw new ReferenceError(\n                    'Could not find subview placeholder #' + elementId\n                );\n            }\n        });\n        this._subviewPlaceholders = new IrLib.Dictionary();\n    },\n\n    /**\n     * @inheritDoc\n     */\n    appendTo: function (element) {\n        this._super(element);\n        this.replaceSubviewPlaceholders();\n    },\n\n    /**\n     * Sets the template\n     *\n     * @param {String} template\n     * @returns {IrLib.View.Template}\n     */\n    setTemplate: function (template) {\n        var templateTemporary = template.trim();\n        if (this._isSelector(templateTemporary)) {\n            this._template = this._getTemplateForSelector(templateTemporary);\n        } else {\n            this._template = templateTemporary;\n        }\n        this._needsRedraw = true;\n        this._templateBlocks = null;\n        return this;\n    },\n\n    /**\n     * Returns the template\n     *\n     * @returns {String}\n     */\n    getTemplate: function () {\n        return this._template;\n    },\n\n    /**\n     * Returns the template blocks\n     *\n     * @returns {IrLib.View.Parser.Block[]}\n     */\n    getTemplateBlocks: function () {\n        if (!this._templateBlocks) {\n            var templateParser = this.getTemplateParser();\n            this._templateBlocks = templateParser.parse(this._template);\n        }\n        return this._templateBlocks;\n    },\n\n    /**\n     * Returns if the given value is a selector\n     *\n     * @param {*} value\n     * @returns {boolean}\n     * @private\n     */\n    _isSelector: function (value) {\n        if (typeof value !== 'string') {\n            return false;\n        }\n        if (value.indexOf('<') !== -1 || value.indexOf('{') !== -1) {\n            return false;\n        }\n        var firstChar = value.charAt(0);\n        return firstChar === '#' || firstChar === '.' || /^[a-z]/i.test(firstChar);\n    },\n\n    /**\n     * Returns the template for the given selector\n     *\n     * @param {String} selector\n     * @returns {String}\n     * @private\n     */\n    _getTemplateForSelector: function (selector) {\n        var templateElement = document.querySelector(selector),\n            templateHtml;\n        if (!templateElement) {\n            return null;\n        }\n        templateHtml = templateElement.innerHTML;\n        return templateHtml ? templateHtml.trim() : null;\n    },\n\n    /**\n     * Returns the template parser interface\n     *\n     * @returns {IrLib.View.Parser.Interface}\n     */\n    getTemplateParser: function () {\n        if (!this._templateParser) {\n            this._templateParser = new IrLib.View.Parser.Parser();\n        }\n        return this._templateParser;\n    },\n\n    /**\n     * Returns a clone of this object\n     *\n     * @returns {*}\n     */\n    clone: function () {\n        var _clone = this._super();\n        _clone._subviewPlaceholders = new IrLib.Dictionary();\n        _clone._lastConditionStateStack = [];\n        return _clone;\n    }\n});\n\n\n}());\n\n\n\n/**\n * A loop based view\n *\n * @implements EventListener\n * @implements IrLib.View.Interface\n * @implements IrLib.View.ContextInterface\n * @implements IrLib.View.SubViewInterface\n */\nIrLib.View.LoopView = IrLib.View.AbstractDomView.extend({\n    needs: ['serviceLocator'],\n\n    /**\n     * @type {IrLib.ServiceLocator}\n     */\n    serviceLocator: null,\n\n    /**\n     * Content to loop over\n     *\n     * @type {Array}\n     */\n    _content: null,\n\n    /**\n     * Template to repeat\n     *\n     * @type {IrLib.View.Interface}\n     */\n    _templateView: null,\n\n    /**\n     * Original template input\n     *\n     * @type {String}\n     */\n    _originalTemplate: '',\n\n    /**\n     * Key to use to access the current iteration value\n     *\n     * @type {String}\n     */\n    _asKey: 'this',\n\n    init: function (template, content, asKey) {\n        this._super();\n        if (template) { // Check if the template argument is given\n            this.setTemplate(template);\n        } else if (typeof this.template === 'string') { // Check if a template string is inherited\n            this.setTemplate(this.template.slice(0));\n        }\n\n        if (content) { // Check if the content is given\n            this.setContent(content);\n        } else if (this.content) { // Check if a content is inherited\n            this.setContent(this.content);\n        }\n\n        if (asKey) { // Check if the as-key is given\n            this._asKey = asKey;\n        } else if (typeof this.asKey === 'string') { // Check if the as-key is inherited\n            this.setAsKey(this.asKey);\n        }\n\n        if (typeof this.context !== 'undefined') { // Check if a context is inherited\n            this._context = this.context;\n        }\n\n        this.defineProperties({\n            'content': {\n                enumerable: true,\n                get: this.getContent,\n                set: this.setContent\n            },\n            'asKey': {\n                enumerable: true,\n                get: this.getAsKey,\n                set: this.setAsKey\n            },\n            'needsRedraw': {\n                enumerable: true,\n                get: this.getNeedsRedraw\n            },\n            'template': {\n                enumerable: true,\n                get: this.getTemplateView,\n                set: this.setTemplate\n            }\n        });\n    },\n\n    /**\n     * Renders the template\n     *\n     * @return {Node|HTMLElement}\n     */\n    render: function () {\n        if (this._needsRedraw) {\n            delete this._dom;\n\n            //this._dom = this._createDom(this.toString());\n\n            var domNode = this._createDom();\n            this._render(domNode);\n            this._dom = domNode;\n\n            this._needsRedraw = false;\n        }\n        return this._dom;\n    },\n\n    /**\n     * Returns the string representation of the rendered template\n     *\n     * @returns {String}\n     */\n    toString: function () {\n        return this._render();\n    },\n\n    /**\n     * Loop over to content, render the template and append to the node (if given)\n     *\n     * @param {Node|HTMLElement} [appendToNode]\n     * @returns {string}\n     * @private\n     */\n    _render: function (appendToNode) {\n        var content = this._content;\n        if (content === null) {\n            throw new ReferenceError('No content defined');\n        }\n\n        var contentLength = content.length,\n            _template = this.getTemplateView(),\n            _asKey = this.getAsKey(),\n            _computed = this._computed,\n            renderedContent = '',\n            templateCopy, currentVariables, scope, i;\n\n        if (!_template) {\n            throw new ReferenceError('Template not specified');\n        }\n\n        _template.setContext(this);\n        if (_computed) {\n            _template.setComputed(_computed);\n        }\n\n        for (i = 0; i < contentLength; i++) {\n            //templateCopy = IrLib.Utility.GeneralUtility.clone(_template, 12);\n            templateCopy = _template.clone();\n\n            currentVariables = content[i];\n            scope = {\n                _meta: {\n                    iteration: i,\n                    first: (i === 0),\n                    last: (i === contentLength)\n                }\n            };\n            scope[_asKey] = currentVariables;\n            templateCopy.setVariables(scope);\n\n            if (appendToNode) {\n                appendToNode.appendChild(templateCopy.render());\n                if (templateCopy instanceof IrLib.View.Template || typeof templateCopy.replaceSubviewPlaceholders === 'function') {\n                    templateCopy.replaceSubviewPlaceholders();\n                }\n            } else {\n                renderedContent += templateCopy.toString();\n            }\n        }\n        return renderedContent;\n    },\n\n    /**\n     * Sets the content to loop over\n     *\n     * @param {Array} content\n     * @returns {IrLib.View.LoopView}\n     */\n    setContent: function (content) {\n        if (!Array.isArray(content)) {\n            throw new TypeError('Argument \"content\" has to be of type object, ' + (typeof content) + ' given');\n        }\n        this._content = content;\n        this._needsRedraw = true;\n        return this;\n    },\n\n    /**\n     * Returns the content to loop over\n     *\n     * @returns {Array}\n     */\n    getContent: function () {\n        return this._content;\n    },\n\n    /**\n     * Set the variables\n     *\n     * @param {Object|IrLib.Dictionary} data\n     * @return {IrLib.View.Interface}\n     * @abstract\n     */\n    setVariables: function (data) {\n        this._super(data);\n        if (typeof data.content !== 'undefined') {\n            this.setContent(data.content);\n            //    throw new TypeError('Loop View only accepts variables with a property called \"content\". See setContent()');\n        }\n        return this;\n    },\n\n    /**\n     * Sets the key to use to access the current iteration value\n     *\n     * @param {String} asKey\n     * @returns {IrLib.View.LoopView}\n     */\n    setAsKey: function (asKey) {\n        this._asKey = asKey;\n        return this;\n    },\n\n    /**\n     * Returns the key to use to access the current iteration value\n     *\n     * @returns {String}\n     */\n    getAsKey: function () {\n        return this._asKey;\n    },\n\n    /**\n     * Sets the template\n     *\n     * @param {IrLib.View.Interface|String} template\n     * @returns {IrLib.View.LoopView}\n     */\n    setTemplate: function (template) {\n        if (!(template instanceof IrLib.View.Interface) && typeof template !== 'string') {\n            throw new TypeError('Invalid type for template, ' + (typeof content) + ' given');\n        }\n        this._originalTemplate = template;\n        return this;\n    },\n\n    /**\n     * Returns the template\n     *\n     * @returns {IrLib.View.Interface}\n     */\n    getTemplateView: function () {\n        if (!this._templateView) {\n            this._templateView = this._createTemplateViewFromTemplate();\n        }\n        return this._templateView;\n    },\n\n    /**\n     * Create the actual template view from the input template\n     *\n     * @returns {IrLib.View.Interface}\n     * @private\n     */\n    _createTemplateViewFromTemplate: function () {\n        var _serviceLocator = this.serviceLocator,\n            _originalTemplate = this._originalTemplate,\n            templateView;\n\n        if (typeof _originalTemplate == 'string') {\n            templateView = new IrLib.View.Template(_originalTemplate);\n            if (_serviceLocator) {\n                _serviceLocator.resolveDependencies(templateView, IrLib.View.Template);\n            }\n        } else if (_originalTemplate instanceof IrLib.View.Interface) {\n            templateView = _originalTemplate;\n        } else {\n            throw new TypeError('Invalid type for template, ' + (typeof content) + ' given');\n        }\n\n        return templateView;\n    },\n\n    /**\n     * Returns the View's context\n     *\n     * @returns {IrLib.View.Interface}\n     */\n    getContext: function () {\n        return this._context;\n    },\n\n    /**\n     * Sets the View's context\n     *\n     * @param {IrLib.View.Interface} context\n     * @returns {IrLib.View.Interface}\n     */\n    setContext: function (context) {\n        this._context = context;\n        return this;\n    }\n});\n\n\n/**\n * Created by COD on 25.06.15.\n */\n\nIrLib.View = IrLib.View || {};\n\n/**\n * Current template block information\n *\n * @param {Number} index\n * @param {Block[]} blockStream\n * @constructor\n */\nIrLib.View.State = function (index, blockStream) {\n    this.index = index|0;\n    this.blockStream = blockStream;\n};\n\n\n/**\n * Created by COD on 25.06.15.\n */\n\nIrLib.View = IrLib.View || {};\n\n/**\n * Defines the interface for Views that can be used as subview inside another View\n *\n * @interface\n */\nIrLib.View.SubViewInterface = function () {\n};\n\n/**\n * Returns the string representation of the rendered template\n *\n * @returns {String}\n */\nIrLib.View.SubViewInterface.prototype.toString = function () {\n    throw new IrLib.MissingImplementationError('toString');\n};\n\n\n/**\n * Created by COD on 25.06.15.\n */\n\nIrLib.View = IrLib.View || {};\n\n/**\n * Defines a common interface for Views with variables\n *\n * @interface\n */\nIrLib.View.VariableViewInterface = function () {\n};\n\n\n/**\n * Sets the variables\n *\n * @param {Object|IrLib.Dictionary} data\n * @returns {IrLib.View.Interface}\n */\nIrLib.View.VariableViewInterface.prototype.setVariables = function (data) {\n    throw new IrLib.MissingImplementationError('setVariables');\n};\n\n/**\n * Adds the variable with the given key and value\n *\n * @param {String} key\n * @param {*} value\n * @returns {IrLib.View.Interface}\n */\nIrLib.View.VariableViewInterface.prototype.assignVariable = function (key, value) {\n    throw new IrLib.MissingImplementationError('assignVariable');\n};\n\n/**\n * Returns the currently assigned variables\n *\n * @returns {IrLib.Dictionary}\n */\nIrLib.View.VariableViewInterface.prototype.getVariables = function () {\n    throw new IrLib.MissingImplementationError('getVariables');\n};\n\n\n}());\n\n\n(function() {/*    require('view\\/parser\\/*');// */\n\n/**\n * Created by daniel on 05.07.15.\n */\nIrLib.View.Parser = IrLib.View.Parser || {};\n\nIrLib.View.Parser.BlockType = {\n    STATIC: 'STA',\n    VARIABLE: 'VAR',\n    REPEATING: 'REP',\n    EXPRESSION: 'EXP',\n    CONDITIONAL: 'CON'\n};\n\n\n/**\n * Created by daniel on 05.07.15.\n */\nIrLib.View.Parser = IrLib.View.Parser || {};\n\n/**\n * Definition of a template block\n *\n * @param {String} type Block type as one of the BlockType constants\n * @param {String} content Inner content of the block\n * @param {Object} [meta] Metadata needed to render this block\n * @constructor\n */\nIrLib.View.Parser.Block = function(type, content, meta) {\n    this.type = type;\n    this.content = content;\n    this.meta = meta || {};\n};\n\n\n/**\n * Created by daniel on 05.07.15.\n */\nIrLib.View.Parser = IrLib.View.Parser || {};\n\nIrLib.View.Parser.ExpressionType = {\n    UNKNOWN: 'UNK',\n\n    VIEW: 'view',\n\n    REPEATING_START: 'for',\n    REPEATING_END: 'endfor',\n    CONDITIONAL_START: 'if',\n    CONDITIONAL_END: 'endif',\n\n    ELSE: 'else',\n\n    /**\n     * Returns the keyword if it is a valid type, or UNKNOWN otherwise\n     *\n     * @param {String} keyword\n     * @returns {String}\n     */\n    getTypeForKeyword: function(keyword) {\n        return this.isKeyword(keyword) ? keyword : this.UNKNOWN;\n    },\n\n    /**\n     * Returns if the given value is a valid type\n     *\n     * @param {String} keyword\n     * @returns {Boolean}\n     */\n    isKeyword: function(keyword) {\n        if (typeof keyword !== 'string') {\n            return false;\n        }\n        var objectKeys = Object.keys(this),\n            objectKeysLength = objectKeys.length;\n\n\n        for (var i = 0; i < objectKeysLength; i++) {\n            if (this[objectKeys[i]] === keyword) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\n\n/**\n * Created by COD on 25.06.15.\n */\n\nIrLib.View.Parser = IrLib.View.Parser || {};\n\n/**\n * Interface for template parsers\n *\n * @interface\n */\nIrLib.View.Parser.Interface = IrLib.CoreObject.extend({\n    /**\n     * Parses the given input string and returns a sequence of Blocks\n     *\n     * @param {String} input\n     * @return {Block[]}\n     */\n    parse: function(input) {\n        throw new IrLib.MissingImplementationError('parse');\n    }\n});\n\n\n/**\n * Created by COD on 25.06.15.\n */\n\n/**\n * @abstract\n * @type {{}}\n */\nIrLib.View.Template = IrLib.View.Template || {};\n\n/**\n * Interface for template parsers\n *\n * @interface\n */\nIrLib.View.Template.ParserInterface = IrLib.CoreObject.extend({\n    /**\n     * Parses the given input string and returns a sequence of Blocks\n     *\n     * @param {String} input\n     * @return {Block[]}\n     */\n    parse: function(input) {\n        throw new IrLib.MissingImplementationError('parse');\n    }\n});\n\n\n/**\n * Created by COD on 25.06.15.\n */\n(function() {/*require('view\\/parser\\/interface');// */\n\n}());\n\n\n\n/**\n * Template Parser implementation\n */\nIrLib.View.Parser.Parser = IrLib.View.Parser.Interface.extend({\n    /**\n     * Start of an expression\n     */\n    EXPRESSION_START: '{%',\n\n    /**\n     * End of an expression\n     */\n    EXPRESSION_END: '%}',\n\n    /**\n     * Start character of a block\n     */\n    BLOCK_START_CHAR: '{',\n\n    /**\n     * End character of a block\n     */\n    BLOCK_END_CHAR: '}',\n\n    /**\n     * Number the block start and end characters have to occur to build an un-safe block\n     */\n    BLOCK_DELIMITER_REPEAT_NO_SAFE: 2,\n\n    /**\n     * Number the block start and end characters have to occur to build an safe block\n     */\n    BLOCK_DELIMITER_REPEAT_SAFE: 3,\n\n    /**\n     * Regular expression to match variable blocks\n     */\n    PATTERN_VARIABLE: /^\\{{2,3}\\s*[a-zA-Z0-9\\-_\\.]+\\s*}{2,3}$/,\n\n    /**\n     * Parses the given input string and returns a sequence of Blocks\n     *\n     * @param {String} input\n     * @return {Block[]}\n     */\n    parse: function (input) {\n        if (typeof input !== 'string') {\n            throw new TypeError('Expected argument \"input\" to be of type string, ' + (typeof input) + ' given');\n        }\n\n        var tokens = this._tokenize(input);\n        return this._analyze(tokens);\n    },\n\n    /**\n     * Analyzes and classifies the tokens\n     *\n     * @param {String[]} tokens\n     * @return {Block[]}\n     * @private\n     */\n    _analyze: function (tokens) {\n        var Block = IrLib.View.Parser.Block,\n            BlockType = IrLib.View.Parser.BlockType,\n            ExpressionType = IrLib.View.Parser.ExpressionType,\n            _PATTERN_VARIABLE = this.PATTERN_VARIABLE,\n            _BLOCK_START_CHAR = this.BLOCK_START_CHAR,\n            _BLOCK_END_CHAR = this.BLOCK_END_CHAR,\n            _BLOCK_DELIMITER_REPEAT_NO_SAFE = this.BLOCK_DELIMITER_REPEAT_NO_SAFE,\n            _BLOCK_DELIMITER_REPEAT_SAFE = this.BLOCK_DELIMITER_REPEAT_SAFE,\n            _EXPRESSION_START = this.EXPRESSION_START,\n            _EXPRESSION_END = this.EXPRESSION_END,\n            blockStartString = new Array(_BLOCK_DELIMITER_REPEAT_NO_SAFE + 1).join(_BLOCK_START_CHAR),\n            expressionLength = _EXPRESSION_START.length,\n            tokensLength = tokens.length,\n            blocks = [],\n            startsWithBlockStart,\n            currentToken,\n            currentTokenLength,\n            currentContent,\n            i;\n\n        for (i = 0; i < tokensLength; i++) {\n            currentToken = tokens[i];\n            currentTokenLength = currentToken.length;\n\n            // Don't check for brackets for tokens that are too short\n            if (currentTokenLength > 2) {\n                startsWithBlockStart = currentToken.substr(0, 1) === _BLOCK_START_CHAR;\n            } else {\n                startsWithBlockStart = false;\n            }\n\n            if (startsWithBlockStart && currentToken.substr(0, _BLOCK_DELIMITER_REPEAT_NO_SAFE) === blockStartString &&\n                _PATTERN_VARIABLE.test(currentToken)) {\n                currentContent = currentToken.substring(\n                    _BLOCK_DELIMITER_REPEAT_NO_SAFE,\n                    currentTokenLength - _BLOCK_DELIMITER_REPEAT_NO_SAFE\n                );\n\n                var contentFirstCharacterIsBlockStart = currentContent.charAt(0) === _BLOCK_START_CHAR;\n                if (\n                    contentFirstCharacterIsBlockStart &&\n                    (currentContent.charAt(\n                        currentTokenLength - _BLOCK_DELIMITER_REPEAT_NO_SAFE - _BLOCK_DELIMITER_REPEAT_NO_SAFE - 1\n                    ) === _BLOCK_END_CHAR)\n                ) { // Case 1 = safe: {{{varName}}}\n                    blocks[i] = new Block(\n                        BlockType.VARIABLE,\n                        currentToken.substring(_BLOCK_DELIMITER_REPEAT_SAFE, currentTokenLength - _BLOCK_DELIMITER_REPEAT_SAFE).trim(),\n                        {isSafe: true}\n                    );\n                } else if (contentFirstCharacterIsBlockStart) { // Case 2 = invalid: {{varName}\n                    blocks[i] = new Block(BlockType.STATIC, currentToken);\n                } else { // Case 3 = not safe: {{varName}}\n                    blocks[i] = new Block(\n                        BlockType.VARIABLE,\n                        currentContent.trim(),\n                        {isSafe: false}\n                    );\n                }\n\n            } else if (startsWithBlockStart &&\n                currentToken.substr(0, expressionLength) === _EXPRESSION_START &&\n                currentToken.substr(currentTokenLength - expressionLength) == _EXPRESSION_END\n            ) {\n                var expressionType, currentContentTrimmed;\n                currentContent = currentToken.substring(expressionLength, currentTokenLength - expressionLength);\n                currentContentTrimmed = currentContent.trim();\n                if (ExpressionType.isKeyword(currentContentTrimmed)) {\n                    expressionType = currentContentTrimmed;\n                } else if (ExpressionType.isKeyword(currentContentTrimmed.substring(0, currentContentTrimmed.indexOf(' ')))) {\n                    expressionType = currentContentTrimmed.substring(0, currentContentTrimmed.indexOf(' '));\n                } else {\n                    expressionType = ExpressionType.UNKNOWN;\n                }\n                blocks[i] = new Block(BlockType.EXPRESSION, currentContentTrimmed, {\n                    expressionType: expressionType\n                });\n\n\n                /* handle other cases */\n            } else {\n                blocks[i] = new Block(BlockType.STATIC, currentToken);\n            }\n\n            //console.log('TYPE:', blocks[i].type, blocks[i].content);\n        }\n        return blocks;\n    },\n\n    /**\n     * Splits the input into an array of tokens\n     *\n     * @param {String} input\n     * @returns {String[]}\n     * @private\n     */\n    _tokenize: function (input) {\n        var inputLength = input.length,\n            _BLOCK_START_CHAR = this.BLOCK_START_CHAR,\n            _BLOCK_END_CHAR = this.BLOCK_END_CHAR,\n            tokens = [],\n            startCursor = 0,\n            endCursor = 0,\n            currentBlockIndex = 0,\n            i = 0,\n            nextStartCursor,\n            content;\n\n        do {\n            // If the first character is a bracket look for the ending one\n            if (input.charAt(startCursor) === _BLOCK_START_CHAR) {\n                endCursor = input.indexOf(\n                    _BLOCK_END_CHAR,\n                    startCursor\n                );\n                while (input.charAt(endCursor + 1) === _BLOCK_END_CHAR && endCursor < inputLength) {\n                    endCursor++;\n                }\n\n                nextStartCursor = endCursor + 1;\n            } else { // Look for the beginning of the next block\n                nextStartCursor = input.indexOf(_BLOCK_START_CHAR, startCursor + 1);\n                if (nextStartCursor === -1) {\n                    endCursor = inputLength;\n                } else {\n                    endCursor = nextStartCursor - 1;\n                }\n            }\n\n            content = input.substr(startCursor, endCursor - startCursor + 1);\n\n            tokens[currentBlockIndex++] = content;\n\n            if (++i > 100000) {\n                throw new Error('Infinite loop?');\n            }\n            startCursor = nextStartCursor;\n        } while (startCursor !== -1);\n        return tokens;\n    }\n});\n\n\n}());\n\n\n\n})(typeof exports === 'undefined'? this.IrLib = {}: exports);\n\n// require('additional files')\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/irlib/dist/irlib.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Created by daniel on 22.10.16.\n */\nexport default class App {\n    constructor() {\n        /** @type Controller */\n        this.controller = {};\n    }\n\n    static needs() {\n        return ['controller', 'serviceScanner'];\n    }\n\n    run() {\n        this.controller.addEventListeners();\n        this.serviceScanner.findServices((serviceUrl) => {\n            console.log(serviceUrl)\n        });\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./JavaScripts/App.js\n **/","/**\n * Created by daniel on 22.10.16.\n */\nimport _ from './../node_modules/underscore/underscore';\nimport RemoteService from './RemoteService';\n\nexport default class Controller {\n    constructor() {\n        this.controls = _.map(document.querySelectorAll('[data-action]'));\n\n        this.keyMap = {\n            \"play-pause\": \"space\",\n            \"forward\": \"right\",\n            \"back\": \"left\"\n        };\n    }\n\n    addEventListeners() {\n        let _click = this.click.bind(this);\n\n        this.controls.forEach(function (control) {\n            control.addEventListener('click', function (event) {\n                _click(event, this)\n            });\n        });\n    }\n\n    click(event, element) {\n        const action = element.dataset.action;\n        RemoteService.send(this.keyMap[action], () => console.log(arguments), function (request) {\n            const messageOutlet = document.querySelector('[data-outlet=\"message\"]');\n            if (messageOutlet) {\n                messageOutlet.innerText = 'ERROR: ' + request.statusText;\n            }\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./JavaScripts/Controller.js\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Created by daniel on 22.10.16.\n */\n\nexport default class RemoteService {\n    /**\n     *\n     * @param {string} key\n     * @param {function} [onSuccess]\n     * @param {function} [onError]\n     */\n    static send(key, onSuccess, onError) {\n        RemoteService._request(\n            '/api/' + key + '',\n            'GET',\n            (data) => {\n                console.log(data);\n                if (onSuccess) {\n                    onSuccess(data, request);\n                }\n            },\n            (request) => {\n                console.log(request);\n                if (onSuccess) {\n                    onError(request);\n                }\n            }\n        )\n    }\n\n    /**\n     *\n     * @param {string} url\n     * @param {string} method\n     * @param {function} success\n     * @param {function} error\n     * @private\n     */\n    static _request(url, method, success, error) {\n        const request = new XMLHttpRequest();\n        request.open(method, url, true);\n        request.setRequestHeader('Content-Type', 'application/javascript');\n\n        request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n                try {\n                    var data = JSON.parse(request.responseText);\n                    success(data, request);\n                } catch (exception) {\n                    error(request, {\n                        \"exception\": exception\n                    });\n                }\n            } else {\n                error(request);\n            }\n        };\n\n        request.onerror = function () {\n            console.log('onerror', arguments);\n\n            error(request);\n        };\n\n        request.send();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./JavaScripts/RemoteService.js\n **/","/**\n * Created by daniel on 06.12.16.\n */\n\nconst EF = () => {\n};\n\nexport default class ServiceScanner {\n    findServices(serviceAvailable) {\n        const location = window && window.location;\n        const hostname = location.hostname;\n\n        if (/^[0-9]{0,3}\\.[0-9]{0,3}\\.[0-9]{0,3}\\.[0-9]{0,3}$/.test(hostname)) {\n            let ipParts = hostname.split('.');\n\n            const lastIpPart = ipParts.pop();\n\n            // this._testIps(serviceAvailable, ipParts, ServiceScanner._range(20, 30), location.port, location.protocol);\n            this._testIps(serviceAvailable, ipParts, [lastIpPart], location.port, location.protocol);\n            // this._testIps(serviceAvailable, ipParts, ServiceScanner._range(1, 255), location.port, location.protocol);\n        }\n    }\n\n    _testIps(serviceAvailable, ipParts, range, port, scheme) {\n        range.forEach(function (ip) {\n            const ipElements = ipParts.slice();\n            ipElements.push(ip);\n\n            this._testIp(serviceAvailable, ipElements, port, scheme);\n            this._testIp(serviceAvailable, ipElements, '8181', scheme);\n        }.bind(this));\n    }\n\n    _testIp(serviceAvailable, ipParts, port, scheme) {\n        const url = scheme + '//' + ipParts.join('.') + ':' + port + '/info';\n\n        this._ajax('GET', url, serviceAvailable);\n    }\n\n    _ajax(method, url, success = EF, error = EF) {\n        const request = new XMLHttpRequest();\n        request.open(method, url, true);\n        request.setRequestHeader('Content-Type', 'application/javascript');\n\n        request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n                try {\n                    var data = JSON.parse(request.responseText);\n                    success(url, data, request);\n                } catch (exception) {\n                    error(request, {\n                        \"exception\": exception\n                    });\n                }\n            } else {\n                error(request);\n            }\n        };\n\n        request.onerror = function () {\n            error(request);\n        };\n\n        request.send();\n\n        setTimeout(function () {\n            request.abort();\n            error(request);\n        }, 4000);\n    }\n\n\n    static _range(start, stop, step) {\n        if (typeof stop == 'undefined') {\n            // one param defined\n            stop = start;\n            start = 0;\n        }\n\n        if (typeof step == 'undefined') {\n            step = 1;\n        }\n\n        if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n            return [];\n        }\n\n        let result = [];\n        for (let i = start; step > 0 ? i < stop : i > stop; i += step) {\n            result.push(i);\n        }\n\n        return result;\n    };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./JavaScripts/ServiceScanner.js\n **/"],"sourceRoot":""}